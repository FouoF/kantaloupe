// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/core/v1alpha1/event.proto

package v1alpha1

import (
	types "github.com/dynamia-ai/kantaloupe/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of event (Normal, Warning), new types could be added in the
// future.
type EventType int32

const (
	// This is only a meaningless placeholder, to avoid zero not return.
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// Normal is a normal event type.
	EventType_Normal EventType = 1
	// Warning is a warning event type.
	EventType_Warning EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "Normal",
		2: "Warning",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"Normal":                 1,
		"Warning":                2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_v1alpha1_event_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_api_core_v1alpha1_event_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{0}
}

type ListEventsRequest_Kind int32

const (
	// KIND_UNSPECIFIED is only a meaningless placeholder, to avoid zero not
	// return.
	ListEventsRequest_KIND_UNSPECIFIED ListEventsRequest_Kind = 0
	// ListEvents by deployment.
	ListEventsRequest_Deployment ListEventsRequest_Kind = 1
	// ListEvents by statefulSet.
	ListEventsRequest_StatefulSet ListEventsRequest_Kind = 2
	// ListEvents by daemonSet.
	ListEventsRequest_DaemonSet ListEventsRequest_Kind = 3
	// ListEvents by pod.
	ListEventsRequest_Pod ListEventsRequest_Kind = 4
	// ListEvents by service.
	ListEventsRequest_Service ListEventsRequest_Kind = 5
	// ListEvents by ingress.
	ListEventsRequest_Ingress ListEventsRequest_Kind = 6
	// ListEvents by job.
	ListEventsRequest_Job ListEventsRequest_Kind = 7
	// ListEvents by cronJob.
	ListEventsRequest_CronJob ListEventsRequest_Kind = 8
	// ListEvents by HorizontalPodAutoscaler.
	ListEventsRequest_HorizontalPodAutoscaler ListEventsRequest_Kind = 9
	// ListEvents by replicaset.
	ListEventsRequest_ReplicaSet ListEventsRequest_Kind = 10
	// ListEvents by CronHPA.
	ListEventsRequest_CronHPA ListEventsRequest_Kind = 11
	// ListEvents by PersistentVolumeClaim.
	ListEventsRequest_PersistentVolumeClaim ListEventsRequest_Kind = 12
	// ListEvents by GroupVersionResource. If kind is set to GroupVersionResource,
	// you must specify the value of group version resource.
	ListEventsRequest_GroupVersionResource ListEventsRequest_Kind = 13
)

// Enum value maps for ListEventsRequest_Kind.
var (
	ListEventsRequest_Kind_name = map[int32]string{
		0:  "KIND_UNSPECIFIED",
		1:  "Deployment",
		2:  "StatefulSet",
		3:  "DaemonSet",
		4:  "Pod",
		5:  "Service",
		6:  "Ingress",
		7:  "Job",
		8:  "CronJob",
		9:  "HorizontalPodAutoscaler",
		10: "ReplicaSet",
		11: "CronHPA",
		12: "PersistentVolumeClaim",
		13: "GroupVersionResource",
	}
	ListEventsRequest_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED":        0,
		"Deployment":              1,
		"StatefulSet":             2,
		"DaemonSet":               3,
		"Pod":                     4,
		"Service":                 5,
		"Ingress":                 6,
		"Job":                     7,
		"CronJob":                 8,
		"HorizontalPodAutoscaler": 9,
		"ReplicaSet":              10,
		"CronHPA":                 11,
		"PersistentVolumeClaim":   12,
		"GroupVersionResource":    13,
	}
)

func (x ListEventsRequest_Kind) Enum() *ListEventsRequest_Kind {
	p := new(ListEventsRequest_Kind)
	*p = x
	return p
}

func (x ListEventsRequest_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListEventsRequest_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_v1alpha1_event_proto_enumTypes[1].Descriptor()
}

func (ListEventsRequest_Kind) Type() protoreflect.EnumType {
	return &file_api_core_v1alpha1_event_proto_enumTypes[1]
}

func (x ListEventsRequest_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListEventsRequest_Kind.Descriptor instead.
func (ListEventsRequest_Kind) EnumDescriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{7, 0}
}

// Event is a report of an event somewhere in the cluster.  Events
// have a limited retention time and triggers and messages may evolve
// with time.  Event consumers should not rely on the timing of an event
// with a given Reason reflecting a consistent underlying trigger, or the
// continued existence of events with that Reason.  Events should be
// treated as informative, best-effort, supplemental data.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The object that this event is about.
	InvolvedObject *ObjectReference `protobuf:"bytes,1,opt,name=involved_object,json=involvedObject,proto3" json:"involved_object,omitempty"`
	// reason is why the action was taken. It is human-readable.
	// This field cannot be empty for new Events and it can have at most 128
	// characters.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// A human-readable description of the status of this operation.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// The component reporting this event. Should be a short machine
	// understandable string.
	Source *EventSource `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// The time at which the most recent occurrence of this event was recorded.
	LastTimestamp int64 `protobuf:"varint,5,opt,name=lastTimestamp,proto3" json:"lastTimestamp,omitempty"`
	// Type of this event (Normal, Warning), new types could be added in the
	// future.
	Type           EventType `protobuf:"varint,6,opt,name=type,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.EventType" json:"type,omitempty"`
	FirstTimestamp int64     `protobuf:"varint,7,opt,name=firstTimestamp,proto3" json:"firstTimestamp,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetInvolvedObject() *ObjectReference {
	if x != nil {
		return x.InvolvedObject
	}
	return nil
}

func (x *Event) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetSource() *EventSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Event) GetLastTimestamp() int64 {
	if x != nil {
		return x.LastTimestamp
	}
	return 0
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetFirstTimestamp() int64 {
	if x != nil {
		return x.FirstTimestamp
	}
	return 0
}

// ObjectReference contains enough information to let you inspect or modify the
// referred object.
type ObjectReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kind of the referent.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	// +optional
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Name of the referent.
	// More info:
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace of the referent.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	// +optional
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// UID of the referent.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	// +optional
	Uid string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// API version of the referent.
	// +optional
	ApiVersion string `protobuf:"bytes,5,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// Specific resourceVersion to which this reference is made, if any.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	// +optional
	ResourceVersion string `protobuf:"bytes,6,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
}

func (x *ObjectReference) Reset() {
	*x = ObjectReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectReference) ProtoMessage() {}

func (x *ObjectReference) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectReference.ProtoReflect.Descriptor instead.
func (*ObjectReference) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{1}
}

func (x *ObjectReference) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ObjectReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ObjectReference) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ObjectReference) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ObjectReference) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

// EventSource contains information for an event.
type EventSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Component from which the event is generated.
	// +optional
	Component string `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	// Node name on which the event is generated.
	// +optional
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *EventSource) Reset() {
	*x = EventSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSource) ProtoMessage() {}

func (x *EventSource) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSource.ProtoReflect.Descriptor instead.
func (*EventSource) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventSource) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *EventSource) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

// ListClusterEvents represents the request of events list of specified cluster
type ListClusterEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster the events belongs to.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Page is current page.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size is the data number shown per page.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,4,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
	// Type is used for query, showing events of specified type.
	// Use example: type=WARNING&type=NORMAL.
	Type []EventType `protobuf:"varint,5,rep,packed,name=type,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.EventType" json:"type,omitempty"`
	// Kind is used for query, showing events of specified involvedObject kind,
	// e.g. Node.
	// +optional
	Kind string `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	// Name is used for query, showing events of specified involvedObject name,
	// e.g. node‘s name when kind is Node.
	// +optional
	Name      string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,8,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListClusterEventsRequest) Reset() {
	*x = ListClusterEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterEventsRequest) ProtoMessage() {}

func (x *ListClusterEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterEventsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{3}
}

func (x *ListClusterEventsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListClusterEventsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListClusterEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterEventsRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

func (x *ListClusterEventsRequest) GetType() []EventType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListClusterEventsRequest) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ListClusterEventsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListClusterEventsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// ListClusterEventsResponse returns the list and pagination of events.
type ListClusterEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data represents the returned event list.
	Items []*Event `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination is for data paging.
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListClusterEventsResponse) Reset() {
	*x = ListClusterEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterEventsResponse) ProtoMessage() {}

func (x *ListClusterEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterEventsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{4}
}

func (x *ListClusterEventsResponse) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListClusterEventsResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// ListClusterEventKindsRequest represents the request of involvedObject's
// kinds list of events by cluster name
type ListClusterEventKindsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster the events belongs to.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ListClusterEventKindsRequest) Reset() {
	*x = ListClusterEventKindsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterEventKindsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterEventKindsRequest) ProtoMessage() {}

func (x *ListClusterEventKindsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterEventKindsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterEventKindsRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{5}
}

func (x *ListClusterEventKindsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

// ListClusterEventKindsResponse returns the list of involvedObject's kinds of
// events.
type ListClusterEventKindsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data is the list of involvedObject'kinds of events.
	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListClusterEventKindsResponse) Reset() {
	*x = ListClusterEventKindsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterEventKindsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterEventKindsResponse) ProtoMessage() {}

func (x *ListClusterEventKindsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterEventKindsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterEventKindsResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{6}
}

func (x *ListClusterEventKindsResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

// ListEventsRequest represents the request of events list of specified
// kind of resource
type ListEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster represents the name of deployment belongs to.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Namespace represents which namespace the deployment belongs to.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Kind represents what type of event is needed.
	Kind ListEventsRequest_Kind `protobuf:"varint,3,opt,name=kind,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest_Kind" json:"kind,omitempty"`
	// The name of involvedObject.
	// If the kind is DEPLOYMENT,
	// this presents the name of deployments.
	KindName string `protobuf:"bytes,4,opt,name=kind_name,json=kindName,proto3" json:"kind_name,omitempty"`
	// Name stands for event name, used for fuzzy search.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Page requested.
	Page int32 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	// Size per page requested.
	PageSize int32 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,8,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
	// Type is used for query, showing events of specified type.
	// Use example: type=WARNING&type=NORMAL.
	Type []EventType `protobuf:"varint,9,rep,packed,name=type,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.EventType" json:"type,omitempty"`
	// resource group,used when the kind type is GroupVersionResource.
	Group string `protobuf:"bytes,10,opt,name=group,proto3" json:"group,omitempty"`
	// resource version,used when the kind type is GroupVersionResource.
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// resource name,used when the kind type is GroupVersionResource.
	Resource string `protobuf:"bytes,12,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{7}
}

func (x *ListEventsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListEventsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListEventsRequest) GetKind() ListEventsRequest_Kind {
	if x != nil {
		return x.Kind
	}
	return ListEventsRequest_KIND_UNSPECIFIED
}

func (x *ListEventsRequest) GetKindName() string {
	if x != nil {
		return x.KindName
	}
	return ""
}

func (x *ListEventsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListEventsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEventsRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

func (x *ListEventsRequest) GetType() []EventType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ListEventsRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ListEventsRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListEventsRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// ListEventsByWorkloadNameResponse the response of listEvents by workload name
type ListEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data response of the workload's event
	Items []*Event `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination is for data paging
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_event_proto_rawDescGZIP(), []int{8}
}

func (x *ListEventsResponse) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListEventsResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_api_core_v1alpha1_event_proto protoreflect.FileDescriptor

var file_api_core_v1alpha1_event_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x27, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80,
	0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f,
	0x6c, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0xc1, 0x02, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c,
	0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xae,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x61,
	0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61,
	0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x38, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb,
	0x05, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x6b, 0x61, 0x6e,
	0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e,
	0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x69, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61,
	0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x10, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,
	0x53, 0x65, 0x74, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x10, 0x07,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x10, 0x08, 0x12, 0x1b, 0x0a,
	0x17, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x64, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x65, 0x74, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x72,
	0x6f, 0x6e, 0x48, 0x50, 0x41, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x0d, 0x22, 0xa7, 0x01, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x40, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2d, 0x61,
	0x69, 0x2f, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_core_v1alpha1_event_proto_rawDescOnce sync.Once
	file_api_core_v1alpha1_event_proto_rawDescData = file_api_core_v1alpha1_event_proto_rawDesc
)

func file_api_core_v1alpha1_event_proto_rawDescGZIP() []byte {
	file_api_core_v1alpha1_event_proto_rawDescOnce.Do(func() {
		file_api_core_v1alpha1_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_core_v1alpha1_event_proto_rawDescData)
	})
	return file_api_core_v1alpha1_event_proto_rawDescData
}

var file_api_core_v1alpha1_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_core_v1alpha1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_core_v1alpha1_event_proto_goTypes = []interface{}{
	(EventType)(0),                        // 0: kantaloupe.dynamia.ai.api.core.v1alpha1.EventType
	(ListEventsRequest_Kind)(0),           // 1: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest.Kind
	(*Event)(nil),                         // 2: kantaloupe.dynamia.ai.api.core.v1alpha1.Event
	(*ObjectReference)(nil),               // 3: kantaloupe.dynamia.ai.api.core.v1alpha1.ObjectReference
	(*EventSource)(nil),                   // 4: kantaloupe.dynamia.ai.api.core.v1alpha1.EventSource
	(*ListClusterEventsRequest)(nil),      // 5: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventsRequest
	(*ListClusterEventsResponse)(nil),     // 6: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventsResponse
	(*ListClusterEventKindsRequest)(nil),  // 7: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventKindsRequest
	(*ListClusterEventKindsResponse)(nil), // 8: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventKindsResponse
	(*ListEventsRequest)(nil),             // 9: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest
	(*ListEventsResponse)(nil),            // 10: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsResponse
	(*types.SortOption)(nil),              // 11: kantaloupe.dynamia.ai.api.types.SortOption
	(*types.Pagination)(nil),              // 12: kantaloupe.dynamia.ai.api.types.Pagination
}
var file_api_core_v1alpha1_event_proto_depIdxs = []int32{
	3,  // 0: kantaloupe.dynamia.ai.api.core.v1alpha1.Event.involved_object:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.ObjectReference
	4,  // 1: kantaloupe.dynamia.ai.api.core.v1alpha1.Event.source:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.EventSource
	0,  // 2: kantaloupe.dynamia.ai.api.core.v1alpha1.Event.type:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.EventType
	11, // 3: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventsRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	0,  // 4: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventsRequest.type:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.EventType
	2,  // 5: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventsResponse.items:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.Event
	12, // 6: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterEventsResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	1,  // 7: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest.kind:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest.Kind
	11, // 8: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	0,  // 9: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsRequest.type:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.EventType
	2,  // 10: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsResponse.items:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.Event
	12, // 11: kantaloupe.dynamia.ai.api.core.v1alpha1.ListEventsResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_core_v1alpha1_event_proto_init() }
func file_api_core_v1alpha1_event_proto_init() {
	if File_api_core_v1alpha1_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_core_v1alpha1_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterEventKindsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterEventKindsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_core_v1alpha1_event_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_core_v1alpha1_event_proto_goTypes,
		DependencyIndexes: file_api_core_v1alpha1_event_proto_depIdxs,
		EnumInfos:         file_api_core_v1alpha1_event_proto_enumTypes,
		MessageInfos:      file_api_core_v1alpha1_event_proto_msgTypes,
	}.Build()
	File_api_core_v1alpha1_event_proto = out.File
	file_api_core_v1alpha1_event_proto_rawDesc = nil
	file_api_core_v1alpha1_event_proto_goTypes = nil
	file_api_core_v1alpha1_event_proto_depIdxs = nil
}
