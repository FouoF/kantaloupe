syntax = "proto3";

package kantaloupe.dynamia.ai.api.core.v1alpha1;

import "api/types/objectmeta.proto";

option go_package = "github.com/dynamia-ai/kantaloupe/api/core/v1alpha1;v1alpha1";

message ConfigMap {
    // Standard object's metadata.
    kantaloupe.dynamia.ai.api.types.ObjectMeta metadata = 1;

    // Immutable, if set to true, ensures that data stored in the ConfigMap cannot
    // be updated (only object metadata can be modified).
    // If not set to true, the field can be modified at any time.
    // Defaulted to nil.
    // +optional
    bool immutable = 2;

    // Data contains the configuration data.
    // Each key must consist of alphanumeric characters, '-', '_' or '.'.
    // Values with non-UTF-8 byte sequences must use the BinaryData field.
    // The keys stored in Data must not overlap with the keys in
    // the BinaryData field, this is enforced during validation process.
    // +optional
    map<string, string> data = 3;

    // BinaryData contains the binary data.
    // Each key must consist of alphanumeric characters, '-', '_' or '.'.
    // BinaryData can contain byte sequences that are not in the UTF-8 range.
    // The keys stored in BinaryData must not overlap with the ones in
    // the Data field, this is enforced during validation process.
    // Using this field will require 1.10+ apiserver and
    // kubelet.
    // +optional
    map<string, bytes> binary_data = 4;
}

// Get ConfigMap information .
message GetConfigMapRequest {
    // Cluster represents which cluster the configMaps belongs to.
    string cluster = 1;

    // Namespace is the metadata.namespace of the referenced configmap.
    // This field is required in all cases.
    string namespace = 2;

    // ConfigMap name.
    string name = 3;
}

// Get ConfigMap data information in json format.
message GetConfigMapJSONRequest {
    // Cluster represents which cluster the configmap belongs to.
    string cluster = 1;

    // Namespace is the metadata.namespace of the referenced ConfigMap.
    // This field is required in all cases.
    string namespace = 2;

    // name represents for the resource name
    string name = 3;
}

// ConfigMap data information in json format.
message GetConfigMapJSONResponse {
    // The data is the ConfigMap YAML details
    string data = 1;
}

message UpdateConfigMapRequest {
    // Cluster the specified configmap belongs to.
    string cluster = 1;

    // Namespace is the metadata.namespace of the referenced ConfigMap.
    // This field is required in all cases.
    string namespace = 2;

    // name represents for the resource name
    string name = 3;

    // data The data field is the ConfigMap YAML details
    string data = 4;
}

message UpdateConfigMapResponse {
    // The data is the ConfigMap YAML details
    string data = 1;
}
