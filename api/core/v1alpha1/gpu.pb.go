// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/core/v1alpha1/gpu.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GPUModel int32

const (
	GPUModel_GPU_MODEL_UNSPECIFIED GPUModel = 0
	// gpu_model_mig gpu model is mig
	GPUModel_GPU_MODEL_MIG GPUModel = 1
	// gpu_model_gpu gpu model is whole
	GPUModel_GPU_MODEL_GPU GPUModel = 2
	// gpu_model_gpu gpu model is vgpu
	GPUModel_GPU_MODEL_VGPU GPUModel = 3
)

// Enum value maps for GPUModel.
var (
	GPUModel_name = map[int32]string{
		0: "GPU_MODEL_UNSPECIFIED",
		1: "GPU_MODEL_MIG",
		2: "GPU_MODEL_GPU",
		3: "GPU_MODEL_VGPU",
	}
	GPUModel_value = map[string]int32{
		"GPU_MODEL_UNSPECIFIED": 0,
		"GPU_MODEL_MIG":         1,
		"GPU_MODEL_GPU":         2,
		"GPU_MODEL_VGPU":        3,
	}
)

func (x GPUModel) Enum() *GPUModel {
	p := new(GPUModel)
	*p = x
	return p
}

func (x GPUModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GPUModel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_v1alpha1_gpu_proto_enumTypes[0].Descriptor()
}

func (GPUModel) Type() protoreflect.EnumType {
	return &file_api_core_v1alpha1_gpu_proto_enumTypes[0]
}

func (x GPUModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GPUModel.Descriptor instead.
func (GPUModel) EnumDescriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{0}
}

type MIGStrategy int32

const (
	// mig_strategy_unspecified unspecified mig strategy
	MIGStrategy_MIG_STRATEGY_UNSPECIFIED MIGStrategy = 0
	// mig_strategy_single single mig strategy
	MIGStrategy_MIG_STRATEGY_SINGLE MIGStrategy = 1
	// mig_strategy_mixed mixed mig strategy
	MIGStrategy_MIG_STRATEGY_MIXED MIGStrategy = 2
)

// Enum value maps for MIGStrategy.
var (
	MIGStrategy_name = map[int32]string{
		0: "MIG_STRATEGY_UNSPECIFIED",
		1: "MIG_STRATEGY_SINGLE",
		2: "MIG_STRATEGY_MIXED",
	}
	MIGStrategy_value = map[string]int32{
		"MIG_STRATEGY_UNSPECIFIED": 0,
		"MIG_STRATEGY_SINGLE":      1,
		"MIG_STRATEGY_MIXED":       2,
	}
)

func (x MIGStrategy) Enum() *MIGStrategy {
	p := new(MIGStrategy)
	*p = x
	return p
}

func (x MIGStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIGStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_v1alpha1_gpu_proto_enumTypes[1].Descriptor()
}

func (MIGStrategy) Type() protoreflect.EnumType {
	return &file_api_core_v1alpha1_gpu_proto_enumTypes[1]
}

func (x MIGStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIGStrategy.Descriptor instead.
func (MIGStrategy) EnumDescriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{1}
}

type GPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid is gpu unique id
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// name is gpu name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// gpu_mode is gpu model
	GpuMode GPUModel `protobuf:"varint,3,opt,name=gpu_mode,json=gpuMode,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel" json:"gpu_mode,omitempty"`
	// gpu_info is some gpu metadata
	GpuInfo *GPUInfo `protobuf:"bytes,4,opt,name=gpu_info,json=gpuInfo,proto3" json:"gpu_info,omitempty"`
	// if GPU model is mig mig_spec_list will have values
	MigSpecList []*MigSpec `protobuf:"bytes,5,rep,name=mig_spec_list,json=migSpecList,proto3" json:"mig_spec_list,omitempty"`
}

func (x *GPU) Reset() {
	*x = GPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPU) ProtoMessage() {}

func (x *GPU) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPU.ProtoReflect.Descriptor instead.
func (*GPU) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{0}
}

func (x *GPU) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GPU) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GPU) GetGpuMode() GPUModel {
	if x != nil {
		return x.GpuMode
	}
	return GPUModel_GPU_MODEL_UNSPECIFIED
}

func (x *GPU) GetGpuInfo() *GPUInfo {
	if x != nil {
		return x.GpuInfo
	}
	return nil
}

func (x *GPU) GetMigSpecList() []*MigSpec {
	if x != nil {
		return x.MigSpecList
	}
	return nil
}

type GPUInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gpu model
	// e.g. NVIDIA A800 80GB PCIe
	ModelName string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// e.g. nvidia0
	Device string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	// gpu memory unit: Mi
	GpuMemory int64 `protobuf:"varint,3,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
}

func (x *GPUInfo) Reset() {
	*x = GPUInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUInfo) ProtoMessage() {}

func (x *GPUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUInfo.ProtoReflect.Descriptor instead.
func (*GPUInfo) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{1}
}

func (x *GPUInfo) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *GPUInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *GPUInfo) GetGpuMemory() int64 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

type MigSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gpu_i_id is the id of each mig instance after the gpu is in mig mode
	GpuIId string `protobuf:"bytes,1,opt,name=gpu_i_id,json=gpuIId,proto3" json:"gpu_i_id,omitempty"`
	// gpu_i_profile is the specification of each mig instance after the gpu is in mig mode
	GpuIProfile string `protobuf:"bytes,2,opt,name=gpu_i_profile,json=gpuIProfile,proto3" json:"gpu_i_profile,omitempty"`
}

func (x *MigSpec) Reset() {
	*x = MigSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigSpec) ProtoMessage() {}

func (x *MigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigSpec.ProtoReflect.Descriptor instead.
func (*MigSpec) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{2}
}

func (x *MigSpec) GetGpuIId() string {
	if x != nil {
		return x.GpuIId
	}
	return ""
}

func (x *MigSpec) GetGpuIProfile() string {
	if x != nil {
		return x.GpuIProfile
	}
	return ""
}

type GPUSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// node defines the cluster node name.
	Node string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// vgpu_types defines a array restore vGPU types of the node.
	VgpuTypes []string `protobuf:"bytes,2,rep,name=vgpu_types,json=vgpuTypes,proto3" json:"vgpu_types,omitempty"`
}

func (x *GPUSummary) Reset() {
	*x = GPUSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPUSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUSummary) ProtoMessage() {}

func (x *GPUSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUSummary.ProtoReflect.Descriptor instead.
func (*GPUSummary) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{3}
}

func (x *GPUSummary) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *GPUSummary) GetVgpuTypes() []string {
	if x != nil {
		return x.VgpuTypes
	}
	return nil
}

type ListNodeGPURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node    string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *ListNodeGPURequest) Reset() {
	*x = ListNodeGPURequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeGPURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeGPURequest) ProtoMessage() {}

func (x *ListNodeGPURequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeGPURequest.ProtoReflect.Descriptor instead.
func (*ListNodeGPURequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{4}
}

func (x *ListNodeGPURequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListNodeGPURequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type ListNodeGPUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GPU `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListNodeGPUResponse) Reset() {
	*x = ListNodeGPUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeGPUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeGPUResponse) ProtoMessage() {}

func (x *ListNodeGPUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeGPUResponse.ProtoReflect.Descriptor instead.
func (*ListNodeGPUResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{5}
}

func (x *ListNodeGPUResponse) GetItems() []*GPU {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateNodeGPUModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string       `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node    string       `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Mode    GPUModel     `protobuf:"varint,3,opt,name=mode,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel" json:"mode,omitempty"`
	MigSpec *MIGModeSpec `protobuf:"bytes,4,opt,name=mig_spec,json=migSpec,proto3" json:"mig_spec,omitempty"`
}

func (x *UpdateNodeGPUModeRequest) Reset() {
	*x = UpdateNodeGPUModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeGPUModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeGPUModeRequest) ProtoMessage() {}

func (x *UpdateNodeGPUModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeGPUModeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeGPUModeRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNodeGPUModeRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *UpdateNodeGPUModeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *UpdateNodeGPUModeRequest) GetMode() GPUModel {
	if x != nil {
		return x.Mode
	}
	return GPUModel_GPU_MODEL_UNSPECIFIED
}

func (x *UpdateNodeGPUModeRequest) GetMigSpec() *MIGModeSpec {
	if x != nil {
		return x.MigSpec
	}
	return nil
}

type UpdateNodeGPUModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode GPUModel `protobuf:"varint,1,opt,name=mode,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel" json:"mode,omitempty"`
}

func (x *UpdateNodeGPUModeResponse) Reset() {
	*x = UpdateNodeGPUModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeGPUModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeGPUModeResponse) ProtoMessage() {}

func (x *UpdateNodeGPUModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeGPUModeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeGPUModeResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNodeGPUModeResponse) GetMode() GPUModel {
	if x != nil {
		return x.Mode
	}
	return GPUModel_GPU_MODEL_UNSPECIFIED
}

type MIGModeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// single or mixed
	Strategy MIGStrategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.MIGStrategy" json:"strategy,omitempty"`
}

func (x *MIGModeSpec) Reset() {
	*x = MIGModeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MIGModeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MIGModeSpec) ProtoMessage() {}

func (x *MIGModeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MIGModeSpec.ProtoReflect.Descriptor instead.
func (*MIGModeSpec) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{8}
}

func (x *MIGModeSpec) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *MIGModeSpec) GetStrategy() MIGStrategy {
	if x != nil {
		return x.Strategy
	}
	return MIGStrategy_MIG_STRATEGY_UNSPECIFIED
}

type ListClusterGPUSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster defines the cluster name.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ListClusterGPUSummaryRequest) Reset() {
	*x = ListClusterGPUSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterGPUSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterGPUSummaryRequest) ProtoMessage() {}

func (x *ListClusterGPUSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterGPUSummaryRequest.ProtoReflect.Descriptor instead.
func (*ListClusterGPUSummaryRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{9}
}

func (x *ListClusterGPUSummaryRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type ListClusterGPUSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// summary defines a array restore GUP type summary of all nodes.
	Summary []*GPUSummary `protobuf:"bytes,1,rep,name=summary,proto3" json:"summary,omitempty"`
}

func (x *ListClusterGPUSummaryResponse) Reset() {
	*x = ListClusterGPUSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterGPUSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterGPUSummaryResponse) ProtoMessage() {}

func (x *ListClusterGPUSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterGPUSummaryResponse.ProtoReflect.Descriptor instead.
func (*ListClusterGPUSummaryResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{10}
}

func (x *ListClusterGPUSummaryResponse) GetSummary() []*GPUSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type GetNodeGPUStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node    string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *GetNodeGPUStatsRequest) Reset() {
	*x = GetNodeGPUStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeGPUStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeGPUStatsRequest) ProtoMessage() {}

func (x *GetNodeGPUStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeGPUStatsRequest.ProtoReflect.Descriptor instead.
func (*GetNodeGPUStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{11}
}

func (x *GetNodeGPUStatsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *GetNodeGPUStatsRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type GetNodeGPUStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster node gpu mode
	Mode GPUModel `protobuf:"varint,1,opt,name=mode,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel" json:"mode,omitempty"`
	// full gpu stats
	FullGpuStats *FullGPUNodeStats `protobuf:"bytes,2,opt,name=full_gpu_stats,json=fullGpuStats,proto3" json:"full_gpu_stats,omitempty"`
	// vgpu stats
	VgpuStats *VGPUNodeStats `protobuf:"bytes,3,opt,name=vgpu_stats,json=vgpuStats,proto3" json:"vgpu_stats,omitempty"`
	// mig stats
	MigStats *MIGNodeStats `protobuf:"bytes,4,opt,name=mig_stats,json=migStats,proto3" json:"mig_stats,omitempty"`
}

func (x *GetNodeGPUStatsResponse) Reset() {
	*x = GetNodeGPUStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeGPUStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeGPUStatsResponse) ProtoMessage() {}

func (x *GetNodeGPUStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeGPUStatsResponse.ProtoReflect.Descriptor instead.
func (*GetNodeGPUStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{12}
}

func (x *GetNodeGPUStatsResponse) GetMode() GPUModel {
	if x != nil {
		return x.Mode
	}
	return GPUModel_GPU_MODEL_UNSPECIFIED
}

func (x *GetNodeGPUStatsResponse) GetFullGpuStats() *FullGPUNodeStats {
	if x != nil {
		return x.FullGpuStats
	}
	return nil
}

func (x *GetNodeGPUStatsResponse) GetVgpuStats() *VGPUNodeStats {
	if x != nil {
		return x.VgpuStats
	}
	return nil
}

func (x *GetNodeGPUStatsResponse) GetMigStats() *MIGNodeStats {
	if x != nil {
		return x.MigStats
	}
	return nil
}

type FullGPUNodeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of physical Gpus
	TotalGpuNumber int32 `protobuf:"varint,1,opt,name=total_gpu_number,json=totalGpuNumber,proto3" json:"total_gpu_number,omitempty"`
	// Number of allocated Gpus
	AllocatedGpuNumber int32 `protobuf:"varint,2,opt,name=allocated_gpu_number,json=allocatedGpuNumber,proto3" json:"allocated_gpu_number,omitempty"`
}

func (x *FullGPUNodeStats) Reset() {
	*x = FullGPUNodeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullGPUNodeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullGPUNodeStats) ProtoMessage() {}

func (x *FullGPUNodeStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullGPUNodeStats.ProtoReflect.Descriptor instead.
func (*FullGPUNodeStats) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{13}
}

func (x *FullGPUNodeStats) GetTotalGpuNumber() int32 {
	if x != nil {
		return x.TotalGpuNumber
	}
	return 0
}

func (x *FullGPUNodeStats) GetAllocatedGpuNumber() int32 {
	if x != nil {
		return x.AllocatedGpuNumber
	}
	return 0
}

type VGPUNodeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of physical Gpus
	PhysicalGpuNumber int32 `protobuf:"varint,1,opt,name=physical_gpu_number,json=physicalGpuNumber,proto3" json:"physical_gpu_number,omitempty"`
	// Number of virtual Gpus
	TotalVirtualGpuNumber int32 `protobuf:"varint,2,opt,name=total_virtual_gpu_number,json=totalVirtualGpuNumber,proto3" json:"total_virtual_gpu_number,omitempty"`
	// Number of allocated virtual Gpus
	AllocatedVirtualGpuNumber int32 `protobuf:"varint,3,opt,name=allocated_virtual_gpu_number,json=allocatedVirtualGpuNumber,proto3" json:"allocated_virtual_gpu_number,omitempty"`
	AllocatedComputePower     int64 `protobuf:"varint,4,opt,name=allocated_compute_power,json=allocatedComputePower,proto3" json:"allocated_compute_power,omitempty"`
	// total compute power
	TotalComputePower int64 `protobuf:"varint,5,opt,name=total_compute_power,json=totalComputePower,proto3" json:"total_compute_power,omitempty"`
	// Number of gpu memory
	TotalGpuMemory int64 `protobuf:"varint,6,opt,name=total_gpu_memory,json=totalGpuMemory,proto3" json:"total_gpu_memory,omitempty"`
	// Number of allocated gpu memory
	AllocatedGpuMemory int64 `protobuf:"varint,7,opt,name=allocated_gpu_memory,json=allocatedGpuMemory,proto3" json:"allocated_gpu_memory,omitempty"`
}

func (x *VGPUNodeStats) Reset() {
	*x = VGPUNodeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VGPUNodeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VGPUNodeStats) ProtoMessage() {}

func (x *VGPUNodeStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VGPUNodeStats.ProtoReflect.Descriptor instead.
func (*VGPUNodeStats) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{14}
}

func (x *VGPUNodeStats) GetPhysicalGpuNumber() int32 {
	if x != nil {
		return x.PhysicalGpuNumber
	}
	return 0
}

func (x *VGPUNodeStats) GetTotalVirtualGpuNumber() int32 {
	if x != nil {
		return x.TotalVirtualGpuNumber
	}
	return 0
}

func (x *VGPUNodeStats) GetAllocatedVirtualGpuNumber() int32 {
	if x != nil {
		return x.AllocatedVirtualGpuNumber
	}
	return 0
}

func (x *VGPUNodeStats) GetAllocatedComputePower() int64 {
	if x != nil {
		return x.AllocatedComputePower
	}
	return 0
}

func (x *VGPUNodeStats) GetTotalComputePower() int64 {
	if x != nil {
		return x.TotalComputePower
	}
	return 0
}

func (x *VGPUNodeStats) GetTotalGpuMemory() int64 {
	if x != nil {
		return x.TotalGpuMemory
	}
	return 0
}

func (x *VGPUNodeStats) GetAllocatedGpuMemory() int64 {
	if x != nil {
		return x.AllocatedGpuMemory
	}
	return 0
}

type MIGNodeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of physical Gpus
	TotalGpuNumber int32 `protobuf:"varint,1,opt,name=total_gpu_number,json=totalGpuNumber,proto3" json:"total_gpu_number,omitempty"`
	// Number of allocated Gpus
	AllocatedGpuNumber int32 `protobuf:"varint,2,opt,name=allocated_gpu_number,json=allocatedGpuNumber,proto3" json:"allocated_gpu_number,omitempty"`
	// Number of mig
	TotalMigNumber int32 `protobuf:"varint,3,opt,name=total_mig_number,json=totalMigNumber,proto3" json:"total_mig_number,omitempty"`
}

func (x *MIGNodeStats) Reset() {
	*x = MIGNodeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MIGNodeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MIGNodeStats) ProtoMessage() {}

func (x *MIGNodeStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_gpu_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MIGNodeStats.ProtoReflect.Descriptor instead.
func (*MIGNodeStats) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_gpu_proto_rawDescGZIP(), []int{15}
}

func (x *MIGNodeStats) GetTotalGpuNumber() int32 {
	if x != nil {
		return x.TotalGpuNumber
	}
	return 0
}

func (x *MIGNodeStats) GetAllocatedGpuNumber() int32 {
	if x != nil {
		return x.AllocatedGpuNumber
	}
	return 0
}

func (x *MIGNodeStats) GetTotalMigNumber() int32 {
	if x != nil {
		return x.TotalMigNumber
	}
	return 0
}

var File_api_core_v1alpha1_gpu_proto protoreflect.FileDescriptor

var file_api_core_v1alpha1_gpu_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x67, 0x70, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x6b,
	0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x9c, 0x02, 0x0a, 0x03, 0x47, 0x50, 0x55, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x50, 0x55, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x67, 0x70, 0x75, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70,
	0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x50, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x67, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x54, 0x0a, 0x0d, 0x6d, 0x69, 0x67, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0b, 0x6d, 0x69, 0x67, 0x53, 0x70, 0x65,
	0x63, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x07, 0x47, 0x50, 0x55, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x70, 0x75, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x70, 0x75,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x47, 0x0a, 0x07, 0x4d, 0x69, 0x67, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x18, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x70, 0x75, 0x49, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x67,
	0x70, 0x75, 0x5f, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x70, 0x75, 0x49, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x3f, 0x0a, 0x0a, 0x47, 0x50, 0x55, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x67, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x76, 0x67, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x42, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x50, 0x55, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x47, 0x50, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x61, 0x6e,
	0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e,
	0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x50, 0x55, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xe0, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x50,
	0x55, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61,
	0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x69, 0x67, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x49,
	0x47, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x6d, 0x69, 0x67, 0x53, 0x70,
	0x65, 0x63, 0x22, 0x62, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x47, 0x50, 0x55, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x0b, 0x4d, 0x49, 0x47, 0x4d, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x50, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x34, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x49, 0x47, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22,
	0x38, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x50,
	0x55, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x50, 0x55, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b, 0x61,
	0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61,
	0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x50, 0x55, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x47, 0x50, 0x55, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x22, 0xec, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x50, 0x55,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6b, 0x61,
	0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61,
	0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x50, 0x55, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x67, 0x70, 0x75,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b,
	0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x47, 0x50, 0x55, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x47, 0x70, 0x75,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x76, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x61, 0x6e, 0x74,
	0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x56, 0x47, 0x50, 0x55, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x09, 0x76, 0x67, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x09,
	0x6d, 0x69, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x49, 0x47, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x08, 0x6d, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x22, 0x6e, 0x0a, 0x10, 0x46, 0x75, 0x6c, 0x6c, 0x47, 0x50, 0x55, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70,
	0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xfd, 0x02, 0x0a, 0x0d, 0x56, 0x47, 0x50, 0x55, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x67,
	0x70, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x1c, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70,
	0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x22, 0x94, 0x01, 0x0a, 0x0c, 0x4d, 0x49, 0x47, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x70, 0x75, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x47, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69,
	0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x5f, 0x0a, 0x08, 0x47, 0x50, 0x55, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4d, 0x49, 0x47, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x47,
	0x50, 0x55, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x50, 0x55, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x4c, 0x5f, 0x56, 0x47, 0x50, 0x55, 0x10, 0x03, 0x2a, 0x5c, 0x0a, 0x0b, 0x4d, 0x49, 0x47, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x49, 0x47, 0x5f, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x49, 0x47, 0x5f, 0x53, 0x54, 0x52,
	0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x49, 0x47, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x4d,
	0x49, 0x58, 0x45, 0x44, 0x10, 0x02, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2d, 0x61, 0x69, 0x2f,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_core_v1alpha1_gpu_proto_rawDescOnce sync.Once
	file_api_core_v1alpha1_gpu_proto_rawDescData = file_api_core_v1alpha1_gpu_proto_rawDesc
)

func file_api_core_v1alpha1_gpu_proto_rawDescGZIP() []byte {
	file_api_core_v1alpha1_gpu_proto_rawDescOnce.Do(func() {
		file_api_core_v1alpha1_gpu_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_core_v1alpha1_gpu_proto_rawDescData)
	})
	return file_api_core_v1alpha1_gpu_proto_rawDescData
}

var file_api_core_v1alpha1_gpu_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_core_v1alpha1_gpu_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_core_v1alpha1_gpu_proto_goTypes = []interface{}{
	(GPUModel)(0),                         // 0: kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel
	(MIGStrategy)(0),                      // 1: kantaloupe.dynamia.ai.api.core.v1alpha1.MIGStrategy
	(*GPU)(nil),                           // 2: kantaloupe.dynamia.ai.api.core.v1alpha1.GPU
	(*GPUInfo)(nil),                       // 3: kantaloupe.dynamia.ai.api.core.v1alpha1.GPUInfo
	(*MigSpec)(nil),                       // 4: kantaloupe.dynamia.ai.api.core.v1alpha1.MigSpec
	(*GPUSummary)(nil),                    // 5: kantaloupe.dynamia.ai.api.core.v1alpha1.GPUSummary
	(*ListNodeGPURequest)(nil),            // 6: kantaloupe.dynamia.ai.api.core.v1alpha1.ListNodeGPURequest
	(*ListNodeGPUResponse)(nil),           // 7: kantaloupe.dynamia.ai.api.core.v1alpha1.ListNodeGPUResponse
	(*UpdateNodeGPUModeRequest)(nil),      // 8: kantaloupe.dynamia.ai.api.core.v1alpha1.UpdateNodeGPUModeRequest
	(*UpdateNodeGPUModeResponse)(nil),     // 9: kantaloupe.dynamia.ai.api.core.v1alpha1.UpdateNodeGPUModeResponse
	(*MIGModeSpec)(nil),                   // 10: kantaloupe.dynamia.ai.api.core.v1alpha1.MIGModeSpec
	(*ListClusterGPUSummaryRequest)(nil),  // 11: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterGPUSummaryRequest
	(*ListClusterGPUSummaryResponse)(nil), // 12: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterGPUSummaryResponse
	(*GetNodeGPUStatsRequest)(nil),        // 13: kantaloupe.dynamia.ai.api.core.v1alpha1.GetNodeGPUStatsRequest
	(*GetNodeGPUStatsResponse)(nil),       // 14: kantaloupe.dynamia.ai.api.core.v1alpha1.GetNodeGPUStatsResponse
	(*FullGPUNodeStats)(nil),              // 15: kantaloupe.dynamia.ai.api.core.v1alpha1.FullGPUNodeStats
	(*VGPUNodeStats)(nil),                 // 16: kantaloupe.dynamia.ai.api.core.v1alpha1.VGPUNodeStats
	(*MIGNodeStats)(nil),                  // 17: kantaloupe.dynamia.ai.api.core.v1alpha1.MIGNodeStats
}
var file_api_core_v1alpha1_gpu_proto_depIdxs = []int32{
	0,  // 0: kantaloupe.dynamia.ai.api.core.v1alpha1.GPU.gpu_mode:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel
	3,  // 1: kantaloupe.dynamia.ai.api.core.v1alpha1.GPU.gpu_info:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPUInfo
	4,  // 2: kantaloupe.dynamia.ai.api.core.v1alpha1.GPU.mig_spec_list:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.MigSpec
	2,  // 3: kantaloupe.dynamia.ai.api.core.v1alpha1.ListNodeGPUResponse.items:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPU
	0,  // 4: kantaloupe.dynamia.ai.api.core.v1alpha1.UpdateNodeGPUModeRequest.mode:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel
	10, // 5: kantaloupe.dynamia.ai.api.core.v1alpha1.UpdateNodeGPUModeRequest.mig_spec:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.MIGModeSpec
	0,  // 6: kantaloupe.dynamia.ai.api.core.v1alpha1.UpdateNodeGPUModeResponse.mode:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel
	1,  // 7: kantaloupe.dynamia.ai.api.core.v1alpha1.MIGModeSpec.strategy:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.MIGStrategy
	5,  // 8: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterGPUSummaryResponse.summary:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPUSummary
	0,  // 9: kantaloupe.dynamia.ai.api.core.v1alpha1.GetNodeGPUStatsResponse.mode:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.GPUModel
	15, // 10: kantaloupe.dynamia.ai.api.core.v1alpha1.GetNodeGPUStatsResponse.full_gpu_stats:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.FullGPUNodeStats
	16, // 11: kantaloupe.dynamia.ai.api.core.v1alpha1.GetNodeGPUStatsResponse.vgpu_stats:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.VGPUNodeStats
	17, // 12: kantaloupe.dynamia.ai.api.core.v1alpha1.GetNodeGPUStatsResponse.mig_stats:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.MIGNodeStats
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_core_v1alpha1_gpu_proto_init() }
func file_api_core_v1alpha1_gpu_proto_init() {
	if File_api_core_v1alpha1_gpu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_core_v1alpha1_gpu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPUInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPUSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeGPURequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeGPUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeGPUModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeGPUModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MIGModeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterGPUSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterGPUSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeGPUStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeGPUStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullGPUNodeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VGPUNodeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_gpu_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MIGNodeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_core_v1alpha1_gpu_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_core_v1alpha1_gpu_proto_goTypes,
		DependencyIndexes: file_api_core_v1alpha1_gpu_proto_depIdxs,
		EnumInfos:         file_api_core_v1alpha1_gpu_proto_enumTypes,
		MessageInfos:      file_api_core_v1alpha1_gpu_proto_msgTypes,
	}.Build()
	File_api_core_v1alpha1_gpu_proto = out.File
	file_api_core_v1alpha1_gpu_proto_rawDesc = nil
	file_api_core_v1alpha1_gpu_proto_goTypes = nil
	file_api_core_v1alpha1_gpu_proto_depIdxs = nil
}
