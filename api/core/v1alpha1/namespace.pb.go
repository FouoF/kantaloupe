// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/core/v1alpha1/namespace.proto

package v1alpha1

import (
	types "github.com/dynamia-ai/kantaloupe/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NamespacePhase int32

const (
	// The namespace state is unspecified.
	NamespacePhase_NAMESPACE_PHASE_UNSPECIFIED NamespacePhase = 0
	// NamespaceActive means the namespace is available for use in the system
	NamespacePhase_Active NamespacePhase = 1
	// NamespaceTerminating means the namespace is undergoing graceful termination
	NamespacePhase_Terminating NamespacePhase = 2
)

// Enum value maps for NamespacePhase.
var (
	NamespacePhase_name = map[int32]string{
		0: "NAMESPACE_PHASE_UNSPECIFIED",
		1: "Active",
		2: "Terminating",
	}
	NamespacePhase_value = map[string]int32{
		"NAMESPACE_PHASE_UNSPECIFIED": 0,
		"Active":                      1,
		"Terminating":                 2,
	}
)

func (x NamespacePhase) Enum() *NamespacePhase {
	p := new(NamespacePhase)
	*p = x
	return p
}

func (x NamespacePhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NamespacePhase) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_v1alpha1_namespace_proto_enumTypes[0].Descriptor()
}

func (NamespacePhase) Type() protoreflect.EnumType {
	return &file_api_core_v1alpha1_namespace_proto_enumTypes[0]
}

func (x NamespacePhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NamespacePhase.Descriptor instead.
func (NamespacePhase) EnumDescriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{0}
}

// The mode of Pod Security Standards. A namespace can configure any or all modes, or even set a different level for different modes.
type Mode int32

const (
	// This is only a meaningless placeholder, to avoid zero not return.
	Mode_MODE_UNSPECIFIED Mode = 0
	// Enforce policy violations will cause the pod to be rejected.
	Mode_enforce Mode = 1
	// Audit Policy violations will trigger the addition of an audit annotation to the event recorded in the audit log, but are otherwise allowed.
	Mode_audit Mode = 2
	// Warn policy violations will trigger a user-facing warning, but are otherwise allowed.
	Mode_warn Mode = 3
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "enforce",
		2: "audit",
		3: "warn",
	}
	Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"enforce":          1,
		"audit":            2,
		"warn":             3,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_v1alpha1_namespace_proto_enumTypes[1].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_api_core_v1alpha1_namespace_proto_enumTypes[1]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{1}
}

// Namespace provides a scope for Names.
type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ResourceQuotas []string `protobuf:"bytes,2,rep,name=resource_quotas,json=resourceQuotas,proto3" json:"resource_quotas,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetResourceQuotas() []string {
	if x != nil {
		return x.ResourceQuotas
	}
	return nil
}

// NamespaceSpec describes the attributes on a Namespace.
type NamespaceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Finalizers []string `protobuf:"bytes,1,rep,name=Finalizers,proto3" json:"Finalizers,omitempty"`
}

func (x *NamespaceSpec) Reset() {
	*x = NamespaceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceSpec) ProtoMessage() {}

func (x *NamespaceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceSpec.ProtoReflect.Descriptor instead.
func (*NamespaceSpec) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{1}
}

func (x *NamespaceSpec) GetFinalizers() []string {
	if x != nil {
		return x.Finalizers
	}
	return nil
}

// NamespaceStatus is information about the current status of a Namespace.
type NamespaceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Phase represents the phase of namespace.
	Phase NamespacePhase `protobuf:"varint,1,opt,name=phase,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.NamespacePhase" json:"phase,omitempty"`
	// ReadyPodNumber is the ready pod number on the namespace.
	ReadyPodNumber int32 `protobuf:"varint,2,opt,name=ready_pod_number,json=readyPodNumber,proto3" json:"ready_pod_number,omitempty"`
	// TotalPodNumber is the total pod number on the namespace.
	TotalPodNumber int32 `protobuf:"varint,3,opt,name=total_pod_number,json=totalPodNumber,proto3" json:"total_pod_number,omitempty"`
	// Represents the latest available observations of a namespace's current state.
	Conditions []*types.Condition `protobuf:"bytes,4,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// PodSecurityEnabled shows if the namespace has enabled pod security policy.
	PodSecurityEnabled bool `protobuf:"varint,5,opt,name=pod_security_enabled,json=podSecurityEnabled,proto3" json:"pod_security_enabled,omitempty"`
	// The cpu usage of the member namespace.
	CpuUsage float64 `protobuf:"fixed64,6,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// The memory usage of the member namespace.
	MemoryUsage float64 `protobuf:"fixed64,7,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
}

func (x *NamespaceStatus) Reset() {
	*x = NamespaceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceStatus) ProtoMessage() {}

func (x *NamespaceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceStatus.ProtoReflect.Descriptor instead.
func (*NamespaceStatus) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{2}
}

func (x *NamespaceStatus) GetPhase() NamespacePhase {
	if x != nil {
		return x.Phase
	}
	return NamespacePhase_NAMESPACE_PHASE_UNSPECIFIED
}

func (x *NamespaceStatus) GetReadyPodNumber() int32 {
	if x != nil {
		return x.ReadyPodNumber
	}
	return 0
}

func (x *NamespaceStatus) GetTotalPodNumber() int32 {
	if x != nil {
		return x.TotalPodNumber
	}
	return 0
}

func (x *NamespaceStatus) GetConditions() []*types.Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *NamespaceStatus) GetPodSecurityEnabled() bool {
	if x != nil {
		return x.PodSecurityEnabled
	}
	return false
}

func (x *NamespaceStatus) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *NamespaceStatus) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

// NamespaceCondition contains details about state of namespace.
type NamespaceCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of this namespace.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// The current status of a namespace.
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// The time at which the most recent occurrence of this event was recorded.
	LastTransitionTime int64 `protobuf:"varint,3,opt,name=lastTransitionTime,proto3" json:"lastTransitionTime,omitempty"`
	// reason is why the action was taken. It is human-readable.
	// This field cannot be empty for new Events and it can have at most 128
	// characters.
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	// A human-readable description of the status of this operation.
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NamespaceCondition) Reset() {
	*x = NamespaceCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceCondition) ProtoMessage() {}

func (x *NamespaceCondition) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceCondition.ProtoReflect.Descriptor instead.
func (*NamespaceCondition) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{3}
}

func (x *NamespaceCondition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NamespaceCondition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NamespaceCondition) GetLastTransitionTime() int64 {
	if x != nil {
		return x.LastTransitionTime
	}
	return 0
}

func (x *NamespaceCondition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *NamespaceCondition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Get Cluster Namespaces information List.
type ListClusterNamespacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cluster the namespace list belong to.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// workspace_id the specified namespace belongs to.
	WorkspaceId int32 `protobuf:"varint,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// workspace_alias the specified namespace belongs to.
	WorkspaceAlias string `protobuf:"bytes,3,opt,name=workspace_alias,json=workspaceAlias,proto3" json:"workspace_alias,omitempty"`
	// Name is to filter namespaces by namespace name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Page requested.
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// Size per page requested.
	PageSize int32 `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,7,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
	// LabelSelector is the format after labels.FormatLabels used to filter
	LabelSelector string `protobuf:"bytes,8,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	// FieldSelector is the format after labels.FormatLabels used to filter
	FieldSelector string `protobuf:"bytes,9,opt,name=field_selector,json=fieldSelector,proto3" json:"field_selector,omitempty"`
	// FuzzyName is used to fuzzy search by cluster name or cluster alias name.
	FuzzyName string `protobuf:"bytes,10,opt,name=fuzzy_name,json=fuzzyName,proto3" json:"fuzzy_name,omitempty"`
	// Phases is used for filter.
	Phase NamespacePhase `protobuf:"varint,11,opt,name=phase,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.NamespacePhase" json:"phase,omitempty"`
	// ExcludeSystem determines to exclude system namespaces, defaults to False.
	ExcludeSystem bool `protobuf:"varint,12,opt,name=exclude_system,json=excludeSystem,proto3" json:"exclude_system,omitempty"`
	// resource_quota determines to return resource quota message, defaults to False.
	ResourceQuota bool `protobuf:"varint,13,opt,name=resource_quota,json=resourceQuota,proto3" json:"resource_quota,omitempty"`
}

func (x *ListClusterNamespacesRequest) Reset() {
	*x = ListClusterNamespacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNamespacesRequest) ProtoMessage() {}

func (x *ListClusterNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListClusterNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{4}
}

func (x *ListClusterNamespacesRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListClusterNamespacesRequest) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *ListClusterNamespacesRequest) GetWorkspaceAlias() string {
	if x != nil {
		return x.WorkspaceAlias
	}
	return ""
}

func (x *ListClusterNamespacesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListClusterNamespacesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListClusterNamespacesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterNamespacesRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

func (x *ListClusterNamespacesRequest) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

func (x *ListClusterNamespacesRequest) GetFieldSelector() string {
	if x != nil {
		return x.FieldSelector
	}
	return ""
}

func (x *ListClusterNamespacesRequest) GetFuzzyName() string {
	if x != nil {
		return x.FuzzyName
	}
	return ""
}

func (x *ListClusterNamespacesRequest) GetPhase() NamespacePhase {
	if x != nil {
		return x.Phase
	}
	return NamespacePhase_NAMESPACE_PHASE_UNSPECIFIED
}

func (x *ListClusterNamespacesRequest) GetExcludeSystem() bool {
	if x != nil {
		return x.ExcludeSystem
	}
	return false
}

func (x *ListClusterNamespacesRequest) GetResourceQuota() bool {
	if x != nil {
		return x.ResourceQuota
	}
	return false
}

type ListClusterNamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data is the returned namespace list
	Items []*Namespace `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination returned contains current page, size, and total.
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListClusterNamespacesResponse) Reset() {
	*x = ListClusterNamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNamespacesResponse) ProtoMessage() {}

func (x *ListClusterNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_v1alpha1_namespace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListClusterNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_api_core_v1alpha1_namespace_proto_rawDescGZIP(), []int{5}
}

func (x *ListClusterNamespacesResponse) GetItems() []*Namespace {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListClusterNamespacesResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_api_core_v1alpha1_namespace_proto protoreflect.FileDescriptor

var file_api_core_v1alpha1_namespace_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x27, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1a, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x22, 0x2f, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x73, 0x22, 0xf2, 0x02, 0x0a, 0x0f, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a,
	0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6b,
	0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x50, 0x6f, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70,
	0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14,
	0x70, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70, 0x6f, 0x64, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa2,
	0x01, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xa1, 0x04, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x4c, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70,
	0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6b, 0x61, 0x6e, 0x74,
	0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x22, 0xb6, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61,
	0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c,
	0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2a, 0x4e, 0x0a, 0x0e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f,
	0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02,
	0x2a, 0x3e, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x6e, 0x10, 0x03,
	0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c,
	0x6f, 0x75, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_core_v1alpha1_namespace_proto_rawDescOnce sync.Once
	file_api_core_v1alpha1_namespace_proto_rawDescData = file_api_core_v1alpha1_namespace_proto_rawDesc
)

func file_api_core_v1alpha1_namespace_proto_rawDescGZIP() []byte {
	file_api_core_v1alpha1_namespace_proto_rawDescOnce.Do(func() {
		file_api_core_v1alpha1_namespace_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_core_v1alpha1_namespace_proto_rawDescData)
	})
	return file_api_core_v1alpha1_namespace_proto_rawDescData
}

var file_api_core_v1alpha1_namespace_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_core_v1alpha1_namespace_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_core_v1alpha1_namespace_proto_goTypes = []interface{}{
	(NamespacePhase)(0),                   // 0: kantaloupe.dynamia.ai.api.core.v1alpha1.NamespacePhase
	(Mode)(0),                             // 1: kantaloupe.dynamia.ai.api.core.v1alpha1.Mode
	(*Namespace)(nil),                     // 2: kantaloupe.dynamia.ai.api.core.v1alpha1.Namespace
	(*NamespaceSpec)(nil),                 // 3: kantaloupe.dynamia.ai.api.core.v1alpha1.NamespaceSpec
	(*NamespaceStatus)(nil),               // 4: kantaloupe.dynamia.ai.api.core.v1alpha1.NamespaceStatus
	(*NamespaceCondition)(nil),            // 5: kantaloupe.dynamia.ai.api.core.v1alpha1.NamespaceCondition
	(*ListClusterNamespacesRequest)(nil),  // 6: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterNamespacesRequest
	(*ListClusterNamespacesResponse)(nil), // 7: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterNamespacesResponse
	(*types.Condition)(nil),               // 8: kantaloupe.dynamia.ai.api.types.Condition
	(*types.SortOption)(nil),              // 9: kantaloupe.dynamia.ai.api.types.SortOption
	(*types.Pagination)(nil),              // 10: kantaloupe.dynamia.ai.api.types.Pagination
}
var file_api_core_v1alpha1_namespace_proto_depIdxs = []int32{
	0,  // 0: kantaloupe.dynamia.ai.api.core.v1alpha1.NamespaceStatus.phase:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.NamespacePhase
	8,  // 1: kantaloupe.dynamia.ai.api.core.v1alpha1.NamespaceStatus.conditions:type_name -> kantaloupe.dynamia.ai.api.types.Condition
	9,  // 2: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterNamespacesRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	0,  // 3: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterNamespacesRequest.phase:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.NamespacePhase
	2,  // 4: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterNamespacesResponse.items:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.Namespace
	10, // 5: kantaloupe.dynamia.ai.api.core.v1alpha1.ListClusterNamespacesResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_core_v1alpha1_namespace_proto_init() }
func file_api_core_v1alpha1_namespace_proto_init() {
	if File_api_core_v1alpha1_namespace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_core_v1alpha1_namespace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_namespace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_namespace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_namespace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_namespace_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterNamespacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_v1alpha1_namespace_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterNamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_core_v1alpha1_namespace_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_core_v1alpha1_namespace_proto_goTypes,
		DependencyIndexes: file_api_core_v1alpha1_namespace_proto_depIdxs,
		EnumInfos:         file_api_core_v1alpha1_namespace_proto_enumTypes,
		MessageInfos:      file_api_core_v1alpha1_namespace_proto_msgTypes,
	}.Build()
	File_api_core_v1alpha1_namespace_proto = out.File
	file_api_core_v1alpha1_namespace_proto_rawDesc = nil
	file_api_core_v1alpha1_namespace_proto_goTypes = nil
	file_api_core_v1alpha1_namespace_proto_depIdxs = nil
}
