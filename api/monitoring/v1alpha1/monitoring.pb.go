// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/monitoring/v1alpha1/monitoring.proto

package v1alpha1

import (
	types "github.com/dynamia-ai/kantaloupe/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResourceType represents the type of resource being queried
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNSPECIFIED ResourceType = 0
	ResourceType_RESOURCE_TYPE_CPU         ResourceType = 1
	ResourceType_RESOURCE_TYPE_MEMORY      ResourceType = 2
	ResourceType_RESOURCE_TYPE_GPU_CORE    ResourceType = 3
	ResourceType_RESOURCE_TYPE_GPU_MEMORY  ResourceType = 4
	ResourceType_RESOURCE_TYPE_STORAGE     ResourceType = 5
	ResourceType_RESOURCE_TYPE_NETWORK     ResourceType = 6
	ResourceType_RESOURCE_TYPE_TEMP        ResourceType = 7
	ResourceType_RESOURCE_TYPE_POWER       ResourceType = 8
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNSPECIFIED",
		1: "RESOURCE_TYPE_CPU",
		2: "RESOURCE_TYPE_MEMORY",
		3: "RESOURCE_TYPE_GPU_CORE",
		4: "RESOURCE_TYPE_GPU_MEMORY",
		5: "RESOURCE_TYPE_STORAGE",
		6: "RESOURCE_TYPE_NETWORK",
		7: "RESOURCE_TYPE_TEMP",
		8: "RESOURCE_TYPE_POWER",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED": 0,
		"RESOURCE_TYPE_CPU":         1,
		"RESOURCE_TYPE_MEMORY":      2,
		"RESOURCE_TYPE_GPU_CORE":    3,
		"RESOURCE_TYPE_GPU_MEMORY":  4,
		"RESOURCE_TYPE_STORAGE":     5,
		"RESOURCE_TYPE_NETWORK":     6,
		"RESOURCE_TYPE_TEMP":        7,
		"RESOURCE_TYPE_POWER":       8,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_monitoring_v1alpha1_monitoring_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_api_monitoring_v1alpha1_monitoring_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{0}
}

// RankingType represents the type of ranking metric (allocated or used)
type RankingType int32

const (
	RankingType_RANKING_TYPE_UNSPECIFIED RankingType = 0
	RankingType_RANKING_TYPE_ALLOCATED   RankingType = 1
	RankingType_RANKING_TYPE_USED        RankingType = 2
)

// Enum value maps for RankingType.
var (
	RankingType_name = map[int32]string{
		0: "RANKING_TYPE_UNSPECIFIED",
		1: "RANKING_TYPE_ALLOCATED",
		2: "RANKING_TYPE_USED",
	}
	RankingType_value = map[string]int32{
		"RANKING_TYPE_UNSPECIFIED": 0,
		"RANKING_TYPE_ALLOCATED":   1,
		"RANKING_TYPE_USED":        2,
	}
)

func (x RankingType) Enum() *RankingType {
	p := new(RankingType)
	*p = x
	return p
}

func (x RankingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RankingType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_monitoring_v1alpha1_monitoring_proto_enumTypes[1].Descriptor()
}

func (RankingType) Type() protoreflect.EnumType {
	return &file_api_monitoring_v1alpha1_monitoring_proto_enumTypes[1]
}

func (x RankingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RankingType.Descriptor instead.
func (RankingType) EnumDescriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{1}
}

type RequstType int32

const (
	RequstType_UNSPECIFIED RequstType = 0
	RequstType_CORE        RequstType = 1
	RequstType_MEMORY      RequstType = 2
)

// Enum value maps for RequstType.
var (
	RequstType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CORE",
		2: "MEMORY",
	}
	RequstType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"CORE":        1,
		"MEMORY":      2,
	}
)

func (x RequstType) Enum() *RequstType {
	p := new(RequstType)
	*p = x
	return p
}

func (x RequstType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequstType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_monitoring_v1alpha1_monitoring_proto_enumTypes[2].Descriptor()
}

func (RequstType) Type() protoreflect.EnumType {
	return &file_api_monitoring_v1alpha1_monitoring_proto_enumTypes[2]
}

func (x RequstType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequstType.Descriptor instead.
func (RequstType) EnumDescriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{2}
}

// Monitoring represents a monitoring.
type Monitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the monitoring.
	PodName string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	// The namespace of the monitoring.
	PodNamespace string `protobuf:"bytes,2,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	// gpu uuid
	GpuUuid string `protobuf:"bytes,3,opt,name=gpu_uuid,json=gpuUuid,proto3" json:"gpu_uuid,omitempty"`
	// The node name of the monitoring.
	NodeName       string  `protobuf:"bytes,4,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	GpuUtilization float32 `protobuf:"fixed32,5,opt,name=gpu_utilization,json=gpuUtilization,proto3" json:"gpu_utilization,omitempty"`
	// gpu card name , eg: Tesla V100-SXM2-16GB
	ModelName string `protobuf:"bytes,6,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring.ProtoReflect.Descriptor instead.
func (*Monitoring) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *Monitoring) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *Monitoring) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *Monitoring) GetGpuUuid() string {
	if x != nil {
		return x.GpuUuid
	}
	return ""
}

func (x *Monitoring) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Monitoring) GetGpuUtilization() float32 {
	if x != nil {
		return x.GpuUtilization
	}
	return 0
}

func (x *Monitoring) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

// ListMonitoringsRequest is the request for ListMonitorings.
type ListMonitoringsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	PodName string `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	// The namespace of the monitoring.
	PodNamespace string `protobuf:"bytes,3,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	// gpu uuid
	GpuUuid string `protobuf:"bytes,4,opt,name=gpu_uuid,json=gpuUuid,proto3" json:"gpu_uuid,omitempty"`
	// The node name of the monitoring.
	NodeName string `protobuf:"bytes,5,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// gpu card name , eg: Tesla V100-SXM2-16GB
	ModelName string `protobuf:"bytes,6,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,7,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
}

func (x *ListMonitoringsRequest) Reset() {
	*x = ListMonitoringsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitoringsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitoringsRequest) ProtoMessage() {}

func (x *ListMonitoringsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitoringsRequest.ProtoReflect.Descriptor instead.
func (*ListMonitoringsRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *ListMonitoringsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListMonitoringsRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ListMonitoringsRequest) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *ListMonitoringsRequest) GetGpuUuid() string {
	if x != nil {
		return x.GpuUuid
	}
	return ""
}

func (x *ListMonitoringsRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ListMonitoringsRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ListMonitoringsRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

type ListMonitoringsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data The data field is the YAML details
	Items []*Monitoring `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination returned contains current page, size, and total.
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListMonitoringsResponse) Reset() {
	*x = ListMonitoringsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitoringsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitoringsResponse) ProtoMessage() {}

func (x *ListMonitoringsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitoringsResponse.ProtoReflect.Descriptor instead.
func (*ListMonitoringsResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *ListMonitoringsResponse) GetItems() []*Monitoring {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListMonitoringsResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// TimeSeriesPoint represents a single point in a time series
type TimeSeriesPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp in seconds since epoch
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The value at this timestamp
	Value *wrapperspb.DoubleValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TimeSeriesPoint) Reset() {
	*x = TimeSeriesPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeriesPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesPoint) ProtoMessage() {}

func (x *TimeSeriesPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesPoint.ProtoReflect.Descriptor instead.
func (*TimeSeriesPoint) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *TimeSeriesPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TimeSeriesPoint) GetValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Value
	}
	return nil
}

// TimeSeries represents a series of data points
type TimeSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metric name (e.g. "allocated", "used")
	Metric string `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	// The data points in this series
	Points []*TimeSeriesPoint `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *TimeSeries) Reset() {
	*x = TimeSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeries) ProtoMessage() {}

func (x *TimeSeries) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeries.ProtoReflect.Descriptor instead.
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *TimeSeries) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *TimeSeries) GetPoints() []*TimeSeriesPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

// ResourceTrendRequest represents a request for resource trend data
type ResourceTrendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster to query
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The type of resource to query
	ResourceType ResourceType `protobuf:"varint,2,opt,name=resource_type,json=resourceType,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType" json:"resource_type,omitempty"`
	// Optional: relative time range (e.g. "1h")
	Range string `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
	// Optional: start time in seconds since epoch
	Start int64 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	// Optional: end time in seconds since epoch
	End int64 `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
	// Optional: step between samples in seconds
	Step int64 `protobuf:"varint,6,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *ResourceTrendRequest) Reset() {
	*x = ResourceTrendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTrendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTrendRequest) ProtoMessage() {}

func (x *ResourceTrendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTrendRequest.ProtoReflect.Descriptor instead.
func (*ResourceTrendRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceTrendRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ResourceTrendRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *ResourceTrendRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *ResourceTrendRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ResourceTrendRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ResourceTrendRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

// ResourceTrendResponse represents the response containing resource trend data
type ResourceTrendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The time series data
	Data []*TimeSeries `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ResourceTrendResponse) Reset() {
	*x = ResourceTrendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTrendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTrendResponse) ProtoMessage() {}

func (x *ResourceTrendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTrendResponse.ProtoReflect.Descriptor instead.
func (*ResourceTrendResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceTrendResponse) GetData() []*TimeSeries {
	if x != nil {
		return x.Data
	}
	return nil
}

// NodeResourceTrendRequest represents a request for node resource trend data
type NodeResourceTrendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster to query
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The node to query
	Node string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	// The type of resource to query
	ResourceType ResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType" json:"resource_type,omitempty"`
	// Optional: relative time range (e.g. "1h")
	Range string `protobuf:"bytes,4,opt,name=range,proto3" json:"range,omitempty"`
	// Optional: start time in seconds since epoch
	Start int64 `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`
	// Optional: end time in seconds since epoch
	End int64 `protobuf:"varint,6,opt,name=end,proto3" json:"end,omitempty"`
	// Optional: step between samples in seconds
	Step int64 `protobuf:"varint,7,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *NodeResourceTrendRequest) Reset() {
	*x = NodeResourceTrendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeResourceTrendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResourceTrendRequest) ProtoMessage() {}

func (x *NodeResourceTrendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResourceTrendRequest.ProtoReflect.Descriptor instead.
func (*NodeResourceTrendRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *NodeResourceTrendRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *NodeResourceTrendRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *NodeResourceTrendRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *NodeResourceTrendRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *NodeResourceTrendRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *NodeResourceTrendRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *NodeResourceTrendRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

// KantaloupeflowResourceTrendRequest represents a request for kantaloupeflow resource trend data
type KantaloupeflowResourceTrendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster to query
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The namespace to query
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The name to query
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The type of resource to query
	ResourceType ResourceType `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType" json:"resource_type,omitempty"`
	// Optional: relative time range (e.g. "1h")
	Range string `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	// Optional: start time in seconds since epoch
	Start int64 `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`
	// Optional: end time in seconds since epoch
	End int64 `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`
	// Optional: step between samples in seconds
	Step int64 `protobuf:"varint,8,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *KantaloupeflowResourceTrendRequest) Reset() {
	*x = KantaloupeflowResourceTrendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KantaloupeflowResourceTrendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KantaloupeflowResourceTrendRequest) ProtoMessage() {}

func (x *KantaloupeflowResourceTrendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KantaloupeflowResourceTrendRequest.ProtoReflect.Descriptor instead.
func (*KantaloupeflowResourceTrendRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{8}
}

func (x *KantaloupeflowResourceTrendRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *KantaloupeflowResourceTrendRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KantaloupeflowResourceTrendRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KantaloupeflowResourceTrendRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *KantaloupeflowResourceTrendRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *KantaloupeflowResourceTrendRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *KantaloupeflowResourceTrendRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *KantaloupeflowResourceTrendRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

// DistributionPoint represents a single point in a distribution
type DistributionPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the category (e.g. "GPU-1" or "0-10")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The value for this category
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DistributionPoint) Reset() {
	*x = DistributionPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionPoint) ProtoMessage() {}

func (x *DistributionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionPoint.ProtoReflect.Descriptor instead.
func (*DistributionPoint) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{9}
}

func (x *DistributionPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DistributionPoint) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// WorkloadDistributionResponse represents the response for workload distribution
type WorkloadDistributionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The distribution data points
	Data []*DistributionPoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WorkloadDistributionResponse) Reset() {
	*x = WorkloadDistributionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadDistributionResponse) ProtoMessage() {}

func (x *WorkloadDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadDistributionResponse.ProtoReflect.Descriptor instead.
func (*WorkloadDistributionResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{10}
}

func (x *WorkloadDistributionResponse) GetData() []*DistributionPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

// NodeWorkloadDistributionRequest represents a request for node workload distribution
type NodeWorkloadDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster to query
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The node to query
	Node string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *NodeWorkloadDistributionRequest) Reset() {
	*x = NodeWorkloadDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeWorkloadDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeWorkloadDistributionRequest) ProtoMessage() {}

func (x *NodeWorkloadDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeWorkloadDistributionRequest.ProtoReflect.Descriptor instead.
func (*NodeWorkloadDistributionRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{11}
}

func (x *NodeWorkloadDistributionRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *NodeWorkloadDistributionRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

// ClusterWorkloadDistributionRequest represents a request for cluster workload distribution
type ClusterWorkloadDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster to query
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ClusterWorkloadDistributionRequest) Reset() {
	*x = ClusterWorkloadDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterWorkloadDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterWorkloadDistributionRequest) ProtoMessage() {}

func (x *ClusterWorkloadDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterWorkloadDistributionRequest.ProtoReflect.Descriptor instead.
func (*ClusterWorkloadDistributionRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{12}
}

func (x *ClusterWorkloadDistributionRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

// TopNodeRequest represents a request for top K nodes by resource usage
type TopNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster      string       `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	ResourceType ResourceType `protobuf:"varint,2,opt,name=resource_type,json=resourceType,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType" json:"resource_type,omitempty"`
	RankingType  RankingType  `protobuf:"varint,3,opt,name=ranking_type,json=rankingType,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RankingType" json:"ranking_type,omitempty"`
	Limit        int32        `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *TopNodeRequest) Reset() {
	*x = TopNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNodeRequest) ProtoMessage() {}

func (x *TopNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNodeRequest.ProtoReflect.Descriptor instead.
func (*TopNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{13}
}

func (x *TopNodeRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *TopNodeRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *TopNodeRequest) GetRankingType() RankingType {
	if x != nil {
		return x.RankingType
	}
	return RankingType_RANKING_TYPE_UNSPECIFIED
}

func (x *TopNodeRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// TopNodeWorkloadRequest represents a request for top K nodes by workload count
type TopNodeWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Limit   int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *TopNodeWorkloadRequest) Reset() {
	*x = TopNodeWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNodeWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNodeWorkloadRequest) ProtoMessage() {}

func (x *TopNodeWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNodeWorkloadRequest.ProtoReflect.Descriptor instead.
func (*TopNodeWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{14}
}

func (x *TopNodeWorkloadRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *TopNodeWorkloadRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// TopNodeResponse represents the response containing top K nodes
type TopNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DistributionPoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TopNodeResponse) Reset() {
	*x = TopNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNodeResponse) ProtoMessage() {}

func (x *TopNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNodeResponse.ProtoReflect.Descriptor instead.
func (*TopNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{15}
}

func (x *TopNodeResponse) GetData() []*DistributionPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type MemoryDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MemoryDistributionRequest) Reset() {
	*x = MemoryDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryDistributionRequest) ProtoMessage() {}

func (x *MemoryDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryDistributionRequest.ProtoReflect.Descriptor instead.
func (*MemoryDistributionRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{16}
}

func (x *MemoryDistributionRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *MemoryDistributionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *MemoryDistributionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// MemoryDistributionResponse represents the gpu memory distribution of a workload
type MemoryDistributionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DistributionPoint64 `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MemoryDistributionResponse) Reset() {
	*x = MemoryDistributionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryDistributionResponse) ProtoMessage() {}

func (x *MemoryDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryDistributionResponse.ProtoReflect.Descriptor instead.
func (*MemoryDistributionResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{17}
}

func (x *MemoryDistributionResponse) GetData() []*DistributionPoint64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type DistributionPoint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DistributionPoint64) Reset() {
	*x = DistributionPoint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributionPoint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionPoint64) ProtoMessage() {}

func (x *DistributionPoint64) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionPoint64.ProtoReflect.Descriptor instead.
func (*DistributionPoint64) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{18}
}

func (x *DistributionPoint64) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DistributionPoint64) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WorkloadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CoreAllocated   float64 `protobuf:"fixed64,2,opt,name=core_allocated,json=coreAllocated,proto3" json:"core_allocated,omitempty"`
	MemoryAllocated float64 `protobuf:"fixed64,3,opt,name=memory_allocated,json=memoryAllocated,proto3" json:"memory_allocated,omitempty"`
	CoreUsage       float64 `protobuf:"fixed64,4,opt,name=core_usage,json=coreUsage,proto3" json:"core_usage,omitempty"`
	MemoryUsage     float64 `protobuf:"fixed64,5,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
}

func (x *WorkloadInfo) Reset() {
	*x = WorkloadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadInfo) ProtoMessage() {}

func (x *WorkloadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadInfo.ProtoReflect.Descriptor instead.
func (*WorkloadInfo) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{19}
}

func (x *WorkloadInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkloadInfo) GetCoreAllocated() float64 {
	if x != nil {
		return x.CoreAllocated
	}
	return 0
}

func (x *WorkloadInfo) GetMemoryAllocated() float64 {
	if x != nil {
		return x.MemoryAllocated
	}
	return 0
}

func (x *WorkloadInfo) GetCoreUsage() float64 {
	if x != nil {
		return x.CoreUsage
	}
	return 0
}

func (x *WorkloadInfo) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

type CardTopWorkloadsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string     `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node    string     `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Uuid    string     `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Limit   int32      `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Type    RequstType `protobuf:"varint,5,opt,name=type,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RequstType" json:"type,omitempty"`
}

func (x *CardTopWorkloadsRequest) Reset() {
	*x = CardTopWorkloadsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTopWorkloadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTopWorkloadsRequest) ProtoMessage() {}

func (x *CardTopWorkloadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTopWorkloadsRequest.ProtoReflect.Descriptor instead.
func (*CardTopWorkloadsRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{20}
}

func (x *CardTopWorkloadsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *CardTopWorkloadsRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *CardTopWorkloadsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CardTopWorkloadsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CardTopWorkloadsRequest) GetType() RequstType {
	if x != nil {
		return x.Type
	}
	return RequstType_UNSPECIFIED
}

type CardTopWorkloadsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*WorkloadInfo `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
	Total     int32           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CardTopWorkloadsResponse) Reset() {
	*x = CardTopWorkloadsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTopWorkloadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTopWorkloadsResponse) ProtoMessage() {}

func (x *CardTopWorkloadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTopWorkloadsResponse.ProtoReflect.Descriptor instead.
func (*CardTopWorkloadsResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{21}
}

func (x *CardTopWorkloadsResponse) GetWorkloads() []*WorkloadInfo {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *CardTopWorkloadsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GpuResourceTrendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster      string       `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node         string       `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Uuid         string       `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ResourceType ResourceType `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType" json:"resource_type,omitempty"`
	// Optional: relative time range (e.g. "1h")
	Range string `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	// Optional: start time in seconds since epoch
	Start int64 `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`
	// Optional: end time in seconds since epoch
	End int64 `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`
	// Optional: step between samples in seconds
	Step int64 `protobuf:"varint,8,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *GpuResourceTrendRequest) Reset() {
	*x = GpuResourceTrendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuResourceTrendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuResourceTrendRequest) ProtoMessage() {}

func (x *GpuResourceTrendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuResourceTrendRequest.ProtoReflect.Descriptor instead.
func (*GpuResourceTrendRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{22}
}

func (x *GpuResourceTrendRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *GpuResourceTrendRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *GpuResourceTrendRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GpuResourceTrendRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *GpuResourceTrendRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *GpuResourceTrendRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GpuResourceTrendRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GpuResourceTrendRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

type GetClusterWorkloadsTopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string     `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Limit   int32      `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Type    RequstType `protobuf:"varint,3,opt,name=type,proto3,enum=kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RequstType" json:"type,omitempty"`
	Range   string     `protobuf:"bytes,4,opt,name=range,proto3" json:"range,omitempty"`
	// Optional: step between samples in seconds
	Step int64 `protobuf:"varint,5,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *GetClusterWorkloadsTopRequest) Reset() {
	*x = GetClusterWorkloadsTopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterWorkloadsTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterWorkloadsTopRequest) ProtoMessage() {}

func (x *GetClusterWorkloadsTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterWorkloadsTopRequest.ProtoReflect.Descriptor instead.
func (*GetClusterWorkloadsTopRequest) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{23}
}

func (x *GetClusterWorkloadsTopRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *GetClusterWorkloadsTopRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetClusterWorkloadsTopRequest) GetType() RequstType {
	if x != nil {
		return x.Type
	}
	return RequstType_UNSPECIFIED
}

func (x *GetClusterWorkloadsTopRequest) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *GetClusterWorkloadsTopRequest) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

type GetClusterWorkloadsTopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*TimeSeries `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetClusterWorkloadsTopResponse) Reset() {
	*x = GetClusterWorkloadsTopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterWorkloadsTopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterWorkloadsTopResponse) ProtoMessage() {}

func (x *GetClusterWorkloadsTopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterWorkloadsTopResponse.ProtoReflect.Descriptor instead.
func (*GetClusterWorkloadsTopResponse) Descriptor() ([]byte, []int) {
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP(), []int{24}
}

func (x *GetClusterWorkloadsTopResponse) GetData() []*TimeSeries {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_monitoring_v1alpha1_monitoring_proto protoreflect.FileDescriptor

var file_api_monitoring_v1alpha1_monitoring_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x6b, 0x61, 0x6e, 0x74,
	0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcc, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x70, 0x75, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x70, 0x75, 0x5f, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x67, 0x70, 0x75, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x97,
	0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x6f,
	0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74,
	0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7c, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x56, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x66, 0x0a, 0x15,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xfc, 0x01, 0x0a, 0x18, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x60, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x22, 0xa4, 0x02, 0x0a, 0x22, 0x4b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75,
	0x70, 0x65, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x3d, 0x0a, 0x11, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x74, 0x0a, 0x1c, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c,
	0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x4f, 0x0a, 0x1f, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x22, 0x3e, 0x0a, 0x22, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x22, 0x81, 0x02, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x60, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70,
	0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x5d, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75,
	0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x54, 0x6f, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67,
	0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x74, 0x0a, 0x1a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6b,
	0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xc0, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x4d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x39, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x70, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x8f, 0x02, 0x0a, 0x17, 0x47, 0x70, 0x75, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x60, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x22, 0xc8, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x54, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x4d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x6f,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a,
	0xff, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x50, 0x55, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x50, 0x55, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x50,
	0x55, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x41, 0x47, 0x45, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x06,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x10,
	0x08, 0x2a, 0x5e, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x18, 0x52, 0x41, 0x4e, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x52, 0x41, 0x4e, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x41,
	0x4e, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10,
	0x02, 0x2a, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45,
	0x4d, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2d, 0x61, 0x69, 0x2f,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_monitoring_v1alpha1_monitoring_proto_rawDescOnce sync.Once
	file_api_monitoring_v1alpha1_monitoring_proto_rawDescData = file_api_monitoring_v1alpha1_monitoring_proto_rawDesc
)

func file_api_monitoring_v1alpha1_monitoring_proto_rawDescGZIP() []byte {
	file_api_monitoring_v1alpha1_monitoring_proto_rawDescOnce.Do(func() {
		file_api_monitoring_v1alpha1_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_monitoring_v1alpha1_monitoring_proto_rawDescData)
	})
	return file_api_monitoring_v1alpha1_monitoring_proto_rawDescData
}

var file_api_monitoring_v1alpha1_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_monitoring_v1alpha1_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_api_monitoring_v1alpha1_monitoring_proto_goTypes = []interface{}{
	(ResourceType)(0),                          // 0: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType
	(RankingType)(0),                           // 1: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RankingType
	(RequstType)(0),                            // 2: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RequstType
	(*Monitoring)(nil),                         // 3: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.Monitoring
	(*ListMonitoringsRequest)(nil),             // 4: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ListMonitoringsRequest
	(*ListMonitoringsResponse)(nil),            // 5: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ListMonitoringsResponse
	(*TimeSeriesPoint)(nil),                    // 6: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeriesPoint
	(*TimeSeries)(nil),                         // 7: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeries
	(*ResourceTrendRequest)(nil),               // 8: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceTrendRequest
	(*ResourceTrendResponse)(nil),              // 9: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceTrendResponse
	(*NodeResourceTrendRequest)(nil),           // 10: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.NodeResourceTrendRequest
	(*KantaloupeflowResourceTrendRequest)(nil), // 11: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.KantaloupeflowResourceTrendRequest
	(*DistributionPoint)(nil),                  // 12: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.DistributionPoint
	(*WorkloadDistributionResponse)(nil),       // 13: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.WorkloadDistributionResponse
	(*NodeWorkloadDistributionRequest)(nil),    // 14: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.NodeWorkloadDistributionRequest
	(*ClusterWorkloadDistributionRequest)(nil), // 15: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ClusterWorkloadDistributionRequest
	(*TopNodeRequest)(nil),                     // 16: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TopNodeRequest
	(*TopNodeWorkloadRequest)(nil),             // 17: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TopNodeWorkloadRequest
	(*TopNodeResponse)(nil),                    // 18: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TopNodeResponse
	(*MemoryDistributionRequest)(nil),          // 19: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.MemoryDistributionRequest
	(*MemoryDistributionResponse)(nil),         // 20: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.MemoryDistributionResponse
	(*DistributionPoint64)(nil),                // 21: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.DistributionPoint64
	(*WorkloadInfo)(nil),                       // 22: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.WorkloadInfo
	(*CardTopWorkloadsRequest)(nil),            // 23: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.CardTopWorkloadsRequest
	(*CardTopWorkloadsResponse)(nil),           // 24: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.CardTopWorkloadsResponse
	(*GpuResourceTrendRequest)(nil),            // 25: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.GpuResourceTrendRequest
	(*GetClusterWorkloadsTopRequest)(nil),      // 26: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.GetClusterWorkloadsTopRequest
	(*GetClusterWorkloadsTopResponse)(nil),     // 27: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.GetClusterWorkloadsTopResponse
	(*types.SortOption)(nil),                   // 28: kantaloupe.dynamia.ai.api.types.SortOption
	(*types.Pagination)(nil),                   // 29: kantaloupe.dynamia.ai.api.types.Pagination
	(*wrapperspb.DoubleValue)(nil),             // 30: google.protobuf.DoubleValue
}
var file_api_monitoring_v1alpha1_monitoring_proto_depIdxs = []int32{
	28, // 0: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ListMonitoringsRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	3,  // 1: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ListMonitoringsResponse.items:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.Monitoring
	29, // 2: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ListMonitoringsResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	30, // 3: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeriesPoint.value:type_name -> google.protobuf.DoubleValue
	6,  // 4: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeries.points:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeriesPoint
	0,  // 5: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceTrendRequest.resource_type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType
	7,  // 6: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceTrendResponse.data:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeries
	0,  // 7: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.NodeResourceTrendRequest.resource_type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType
	0,  // 8: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.KantaloupeflowResourceTrendRequest.resource_type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType
	12, // 9: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.WorkloadDistributionResponse.data:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.DistributionPoint
	0,  // 10: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TopNodeRequest.resource_type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType
	1,  // 11: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TopNodeRequest.ranking_type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RankingType
	12, // 12: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TopNodeResponse.data:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.DistributionPoint
	21, // 13: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.MemoryDistributionResponse.data:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.DistributionPoint64
	2,  // 14: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.CardTopWorkloadsRequest.type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RequstType
	22, // 15: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.CardTopWorkloadsResponse.workloads:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.WorkloadInfo
	0,  // 16: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.GpuResourceTrendRequest.resource_type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.ResourceType
	2,  // 17: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.GetClusterWorkloadsTopRequest.type:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.RequstType
	7,  // 18: kantaloupe.dynamia.ai.api.monitoring.v1alpha1.GetClusterWorkloadsTopResponse.data:type_name -> kantaloupe.dynamia.ai.api.monitoring.v1alpha1.TimeSeries
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_monitoring_v1alpha1_monitoring_proto_init() }
func file_api_monitoring_v1alpha1_monitoring_proto_init() {
	if File_api_monitoring_v1alpha1_monitoring_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitoringsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitoringsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeriesPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTrendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTrendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeResourceTrendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KantaloupeflowResourceTrendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadDistributionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeWorkloadDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterWorkloadDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNodeWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryDistributionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributionPoint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTopWorkloadsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTopWorkloadsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuResourceTrendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterWorkloadsTopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_monitoring_v1alpha1_monitoring_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterWorkloadsTopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_monitoring_v1alpha1_monitoring_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_monitoring_v1alpha1_monitoring_proto_goTypes,
		DependencyIndexes: file_api_monitoring_v1alpha1_monitoring_proto_depIdxs,
		EnumInfos:         file_api_monitoring_v1alpha1_monitoring_proto_enumTypes,
		MessageInfos:      file_api_monitoring_v1alpha1_monitoring_proto_msgTypes,
	}.Build()
	File_api_monitoring_v1alpha1_monitoring_proto = out.File
	file_api_monitoring_v1alpha1_monitoring_proto_rawDesc = nil
	file_api_monitoring_v1alpha1_monitoring_proto_goTypes = nil
	file_api_monitoring_v1alpha1_monitoring_proto_depIdxs = nil
}
