// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/acceleratorcard/v1alpha1/acceleratorcard.proto

package v1alpha1

import (
	v1alpha1 "github.com/dynamia-ai/kantaloupe/api/clusters/v1alpha1"
	v1alpha11 "github.com/dynamia-ai/kantaloupe/api/core/v1alpha1"
	types "github.com/dynamia-ai/kantaloupe/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AcceleratorCardState int32

const (
	// The acceleratorcard state is unspecified.
	AcceleratorCardState_ACCELERATORCARD_STATE_UNSPECIFIED AcceleratorCardState = 0
	AcceleratorCardState_HEALTH                            AcceleratorCardState = 1
	AcceleratorCardState_ERROR                             AcceleratorCardState = 2
)

// Enum value maps for AcceleratorCardState.
var (
	AcceleratorCardState_name = map[int32]string{
		0: "ACCELERATORCARD_STATE_UNSPECIFIED",
		1: "HEALTH",
		2: "ERROR",
	}
	AcceleratorCardState_value = map[string]int32{
		"ACCELERATORCARD_STATE_UNSPECIFIED": 0,
		"HEALTH":                            1,
		"ERROR":                             2,
	}
)

func (x AcceleratorCardState) Enum() *AcceleratorCardState {
	p := new(AcceleratorCardState)
	*p = x
	return p
}

func (x AcceleratorCardState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AcceleratorCardState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_enumTypes[0].Descriptor()
}

func (AcceleratorCardState) Type() protoreflect.EnumType {
	return &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_enumTypes[0]
}

func (x AcceleratorCardState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AcceleratorCardState.Descriptor instead.
func (AcceleratorCardState) EnumDescriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{0}
}

type AcceleratorCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Node        string               `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Model       string               `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	State       AcceleratorCardState `protobuf:"varint,4,opt,name=state,proto3,enum=kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCardState" json:"state,omitempty"`
	Temperature float64              `protobuf:"fixed64,5,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Power       float64              `protobuf:"fixed64,6,opt,name=power,proto3" json:"power,omitempty"`
	// Provider represents the cloud provider name of the member cluster.
	Provider v1alpha1.ClusterProvider `protobuf:"varint,7,opt,name=provider,proto3,enum=kantaloupe.dynamia.ai.api.clusters.v1alpha1.ClusterProvider" json:"provider,omitempty"`
	// ClusterType represents the type of cluster.
	Type v1alpha1.ClusterType `protobuf:"varint,8,opt,name=type,proto3,enum=kantaloupe.dynamia.ai.api.clusters.v1alpha1.ClusterType" json:"type,omitempty"`
	// IP Address reachable to the node.
	NodeAddresses []*v1alpha11.NodeAddress `protobuf:"bytes,9,rep,name=nodeAddresses,proto3" json:"nodeAddresses,omitempty"`
	// gpu_total is gpu total number.
	GpuCoreTotal int32 `protobuf:"varint,10,opt,name=gpu_core_total,json=gpuCoreTotal,proto3" json:"gpu_core_total,omitempty"`
	// gpu_allocated is gpu allocated number.
	GpuCoreAllocated int32 `protobuf:"varint,11,opt,name=gpu_core_allocated,json=gpuCoreAllocated,proto3" json:"gpu_core_allocated,omitempty"`
	// gpu_core_usage is the usage rate of gpu
	GpuCoreUsage int32 `protobuf:"varint,12,opt,name=gpu_core_usage,json=gpuCoreUsage,proto3" json:"gpu_core_usage,omitempty"`
	// gpu_memory_total is all gpu memory number with node. Unit: byte.
	GpuMemoryTotal int64 `protobuf:"varint,13,opt,name=gpu_memory_total,json=gpuMemoryTotal,proto3" json:"gpu_memory_total,omitempty"`
	// gpu_memory_allocated is allocated gpu memory number with node. Unit: byte
	GpuMemoryAllocated int64 `protobuf:"varint,14,opt,name=gpu_memory_allocated,json=gpuMemoryAllocated,proto3" json:"gpu_memory_allocated,omitempty"`
	// gpu_memory_allocatable is allocatable gpu memory number with node. Unit: byte
	GpuMemoryAllocatable int64 `protobuf:"varint,15,opt,name=gpu_memory_allocatable,json=gpuMemoryAllocatable,proto3" json:"gpu_memory_allocatable,omitempty"`
	// gpu_memory_usage is the usage rate of gpu video memory
	GpuMemoryUsage int64 `protobuf:"varint,16,opt,name=gpu_memory_usage,json=gpuMemoryUsage,proto3" json:"gpu_memory_usage,omitempty"`
	// workload_limit is the limit of workloads can ran on the card
	WorkloadLimit int32 `protobuf:"varint,17,opt,name=workload_limit,json=workloadLimit,proto3" json:"workload_limit,omitempty"`
}

func (x *AcceleratorCard) Reset() {
	*x = AcceleratorCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceleratorCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceleratorCard) ProtoMessage() {}

func (x *AcceleratorCard) ProtoReflect() protoreflect.Message {
	mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceleratorCard.ProtoReflect.Descriptor instead.
func (*AcceleratorCard) Descriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{0}
}

func (x *AcceleratorCard) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AcceleratorCard) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *AcceleratorCard) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AcceleratorCard) GetState() AcceleratorCardState {
	if x != nil {
		return x.State
	}
	return AcceleratorCardState_ACCELERATORCARD_STATE_UNSPECIFIED
}

func (x *AcceleratorCard) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *AcceleratorCard) GetPower() float64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *AcceleratorCard) GetProvider() v1alpha1.ClusterProvider {
	if x != nil {
		return x.Provider
	}
	return v1alpha1.ClusterProvider(0)
}

func (x *AcceleratorCard) GetType() v1alpha1.ClusterType {
	if x != nil {
		return x.Type
	}
	return v1alpha1.ClusterType(0)
}

func (x *AcceleratorCard) GetNodeAddresses() []*v1alpha11.NodeAddress {
	if x != nil {
		return x.NodeAddresses
	}
	return nil
}

func (x *AcceleratorCard) GetGpuCoreTotal() int32 {
	if x != nil {
		return x.GpuCoreTotal
	}
	return 0
}

func (x *AcceleratorCard) GetGpuCoreAllocated() int32 {
	if x != nil {
		return x.GpuCoreAllocated
	}
	return 0
}

func (x *AcceleratorCard) GetGpuCoreUsage() int32 {
	if x != nil {
		return x.GpuCoreUsage
	}
	return 0
}

func (x *AcceleratorCard) GetGpuMemoryTotal() int64 {
	if x != nil {
		return x.GpuMemoryTotal
	}
	return 0
}

func (x *AcceleratorCard) GetGpuMemoryAllocated() int64 {
	if x != nil {
		return x.GpuMemoryAllocated
	}
	return 0
}

func (x *AcceleratorCard) GetGpuMemoryAllocatable() int64 {
	if x != nil {
		return x.GpuMemoryAllocatable
	}
	return 0
}

func (x *AcceleratorCard) GetGpuMemoryUsage() int64 {
	if x != nil {
		return x.GpuMemoryUsage
	}
	return 0
}

func (x *AcceleratorCard) GetWorkloadLimit() int32 {
	if x != nil {
		return x.WorkloadLimit
	}
	return 0
}

type ListAcceleratorCardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Name is the user-specified identifier.
	// This field may not be updated.
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Specify modelname of the acceleratorcard.
	Model string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	// Specify node of the acceleratorcard.
	Node string `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	// "Health" or "Error"
	State AcceleratorCardState `protobuf:"varint,5,opt,name=state,proto3,enum=kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCardState" json:"state,omitempty"`
	// Page requested.
	Page int32 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	// Size per page requested.
	PageSize int32 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,8,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
}

func (x *ListAcceleratorCardsRequest) Reset() {
	*x = ListAcceleratorCardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAcceleratorCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcceleratorCardsRequest) ProtoMessage() {}

func (x *ListAcceleratorCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcceleratorCardsRequest.ProtoReflect.Descriptor instead.
func (*ListAcceleratorCardsRequest) Descriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{1}
}

func (x *ListAcceleratorCardsRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListAcceleratorCardsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListAcceleratorCardsRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ListAcceleratorCardsRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ListAcceleratorCardsRequest) GetState() AcceleratorCardState {
	if x != nil {
		return x.State
	}
	return AcceleratorCardState_ACCELERATORCARD_STATE_UNSPECIFIED
}

func (x *ListAcceleratorCardsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAcceleratorCardsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAcceleratorCardsRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

// Clusters information List.
type ListAcceleratorCardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data The data field is the YAML details
	Items []*AcceleratorCard `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination returned contains current page, size, and total.
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAcceleratorCardsResponse) Reset() {
	*x = ListAcceleratorCardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAcceleratorCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcceleratorCardsResponse) ProtoMessage() {}

func (x *ListAcceleratorCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcceleratorCardsResponse.ProtoReflect.Descriptor instead.
func (*ListAcceleratorCardsResponse) Descriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{2}
}

func (x *ListAcceleratorCardsResponse) GetItems() []*AcceleratorCard {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListAcceleratorCardsResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetAcceleratorCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node    string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Uuid    string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetAcceleratorCardRequest) Reset() {
	*x = GetAcceleratorCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcceleratorCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcceleratorCardRequest) ProtoMessage() {}

func (x *GetAcceleratorCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcceleratorCardRequest.ProtoReflect.Descriptor instead.
func (*GetAcceleratorCardRequest) Descriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{3}
}

func (x *GetAcceleratorCardRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *GetAcceleratorCardRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *GetAcceleratorCardRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ListModelNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ListModelNamesRequest) Reset() {
	*x = ListModelNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelNamesRequest) ProtoMessage() {}

func (x *ListModelNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelNamesRequest.ProtoReflect.Descriptor instead.
func (*ListModelNamesRequest) Descriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{4}
}

func (x *ListModelNamesRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type ListModelNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelNames []string `protobuf:"bytes,1,rep,name=model_names,json=modelNames,proto3" json:"model_names,omitempty"`
}

func (x *ListModelNamesResponse) Reset() {
	*x = ListModelNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListModelNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelNamesResponse) ProtoMessage() {}

func (x *ListModelNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelNamesResponse.ProtoReflect.Descriptor instead.
func (*ListModelNamesResponse) Descriptor() ([]byte, []int) {
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP(), []int{5}
}

func (x *ListModelNamesResponse) GetModelNames() []string {
	if x != nil {
		return x.ModelNames
	}
	return nil
}

var File_api_acceleratorcard_v1alpha1_acceleratorcard_proto protoreflect.FileDescriptor

var file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDesc = []byte{
	0x0a, 0x32, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc8, 0x06, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x5e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x61, 0x6e,
	0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e,
	0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x67, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x70, 0x75,
	0x43, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x70, 0x75,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67,
	0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xd4, 0x02, 0x0a,
	0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x5e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e,
	0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e,
	0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x39,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x2a, 0x54, 0x0a, 0x14, 0x41, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x43, 0x43, 0x45, 0x4c, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52,
	0x43, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x41, 0x4c,
	0x54, 0x48, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x42,
	0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2d, 0x61, 0x69, 0x2f, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescOnce sync.Once
	file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescData = file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDesc
)

func file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescGZIP() []byte {
	file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescOnce.Do(func() {
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescData)
	})
	return file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDescData
}

var file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_goTypes = []interface{}{
	(AcceleratorCardState)(0),            // 0: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCardState
	(*AcceleratorCard)(nil),              // 1: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCard
	(*ListAcceleratorCardsRequest)(nil),  // 2: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListAcceleratorCardsRequest
	(*ListAcceleratorCardsResponse)(nil), // 3: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListAcceleratorCardsResponse
	(*GetAcceleratorCardRequest)(nil),    // 4: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.GetAcceleratorCardRequest
	(*ListModelNamesRequest)(nil),        // 5: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListModelNamesRequest
	(*ListModelNamesResponse)(nil),       // 6: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListModelNamesResponse
	(v1alpha1.ClusterProvider)(0),        // 7: kantaloupe.dynamia.ai.api.clusters.v1alpha1.ClusterProvider
	(v1alpha1.ClusterType)(0),            // 8: kantaloupe.dynamia.ai.api.clusters.v1alpha1.ClusterType
	(*v1alpha11.NodeAddress)(nil),        // 9: kantaloupe.dynamia.ai.api.core.v1alpha1.NodeAddress
	(*types.SortOption)(nil),             // 10: kantaloupe.dynamia.ai.api.types.SortOption
	(*types.Pagination)(nil),             // 11: kantaloupe.dynamia.ai.api.types.Pagination
}
var file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_depIdxs = []int32{
	0,  // 0: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCard.state:type_name -> kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCardState
	7,  // 1: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCard.provider:type_name -> kantaloupe.dynamia.ai.api.clusters.v1alpha1.ClusterProvider
	8,  // 2: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCard.type:type_name -> kantaloupe.dynamia.ai.api.clusters.v1alpha1.ClusterType
	9,  // 3: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCard.nodeAddresses:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.NodeAddress
	0,  // 4: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListAcceleratorCardsRequest.state:type_name -> kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCardState
	10, // 5: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListAcceleratorCardsRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	1,  // 6: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListAcceleratorCardsResponse.items:type_name -> kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.AcceleratorCard
	11, // 7: kantaloupe.dynamia.ai.api.acceleratorcard.v1alpha1.ListAcceleratorCardsResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_init() }
func file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_init() {
	if File_api_acceleratorcard_v1alpha1_acceleratorcard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceleratorCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAcceleratorCardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAcceleratorCardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcceleratorCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListModelNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_goTypes,
		DependencyIndexes: file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_depIdxs,
		EnumInfos:         file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_enumTypes,
		MessageInfos:      file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_msgTypes,
	}.Build()
	File_api_acceleratorcard_v1alpha1_acceleratorcard_proto = out.File
	file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_rawDesc = nil
	file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_goTypes = nil
	file_api_acceleratorcard_v1alpha1_acceleratorcard_proto_depIdxs = nil
}
