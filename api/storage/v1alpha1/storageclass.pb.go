// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/storage/v1alpha1/storageclass.proto

package v1alpha1

import (
	types "github.com/dynamia-ai/kantaloupe/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageClass_ReclaimPolicy int32

const (
	StorageClass_RECLAIM_AOLICY_UNSPECIFIED StorageClass_ReclaimPolicy = 0
	// PersistentVolumeReclaimDelete means the volume will be deleted from Kubernetes on release from its claim.
	// The volume plugin must support Deletion.
	StorageClass_Delete StorageClass_ReclaimPolicy = 1
	// PersistentVolumeReclaimRetain means the volume will be left in its current phase (Released) for manual reclamation by the administrator.
	// The default policy is Retain.
	StorageClass_Retain StorageClass_ReclaimPolicy = 2
)

// Enum value maps for StorageClass_ReclaimPolicy.
var (
	StorageClass_ReclaimPolicy_name = map[int32]string{
		0: "RECLAIM_AOLICY_UNSPECIFIED",
		1: "Delete",
		2: "Retain",
	}
	StorageClass_ReclaimPolicy_value = map[string]int32{
		"RECLAIM_AOLICY_UNSPECIFIED": 0,
		"Delete":                     1,
		"Retain":                     2,
	}
)

func (x StorageClass_ReclaimPolicy) Enum() *StorageClass_ReclaimPolicy {
	p := new(StorageClass_ReclaimPolicy)
	*p = x
	return p
}

func (x StorageClass_ReclaimPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageClass_ReclaimPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_storage_v1alpha1_storageclass_proto_enumTypes[0].Descriptor()
}

func (StorageClass_ReclaimPolicy) Type() protoreflect.EnumType {
	return &file_api_storage_v1alpha1_storageclass_proto_enumTypes[0]
}

func (x StorageClass_ReclaimPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageClass_ReclaimPolicy.Descriptor instead.
func (StorageClass_ReclaimPolicy) EnumDescriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storageclass_proto_rawDescGZIP(), []int{0, 0}
}

type StorageClass_VolumeBindingMode int32

const (
	StorageClass_VOLUME_BINDING_MODE_UNSPECIFIED StorageClass_VolumeBindingMode = 0
	// VolumeBindingImmediate indicates that PersistentVolumeClaims should be
	// immediately provisioned and bound.  This is the default mode.
	StorageClass_Immediate StorageClass_VolumeBindingMode = 1
	// VolumeBindingWaitForFirstConsumer indicates that PersistentVolumeClaims
	// should not be provisioned and bound until the first Pod is created that
	// references the PeristentVolumeClaim.  The volume provisioning and
	// binding will occur during Pod scheduing.
	StorageClass_WaitForFirstConsumer StorageClass_VolumeBindingMode = 2
)

// Enum value maps for StorageClass_VolumeBindingMode.
var (
	StorageClass_VolumeBindingMode_name = map[int32]string{
		0: "VOLUME_BINDING_MODE_UNSPECIFIED",
		1: "Immediate",
		2: "WaitForFirstConsumer",
	}
	StorageClass_VolumeBindingMode_value = map[string]int32{
		"VOLUME_BINDING_MODE_UNSPECIFIED": 0,
		"Immediate":                       1,
		"WaitForFirstConsumer":            2,
	}
)

func (x StorageClass_VolumeBindingMode) Enum() *StorageClass_VolumeBindingMode {
	p := new(StorageClass_VolumeBindingMode)
	*p = x
	return p
}

func (x StorageClass_VolumeBindingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageClass_VolumeBindingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_storage_v1alpha1_storageclass_proto_enumTypes[1].Descriptor()
}

func (StorageClass_VolumeBindingMode) Type() protoreflect.EnumType {
	return &file_api_storage_v1alpha1_storageclass_proto_enumTypes[1]
}

func (x StorageClass_VolumeBindingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageClass_VolumeBindingMode.Descriptor instead.
func (StorageClass_VolumeBindingMode) EnumDescriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storageclass_proto_rawDescGZIP(), []int{0, 1}
}

// StorageClass describes the parameters for a class of storage for
// which PersistentVolumes can be dynamically provisioned.
//
// StorageClasses are non-namespaced; the name of the storage class
// according to etcd is in ObjectMeta.Name.
type StorageClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard object's metadata.
	Metadata *types.ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Provisioner indicates the type of the provisioner.
	Provisioner string `protobuf:"bytes,2,opt,name=provisioner,proto3" json:"provisioner,omitempty"`
	// persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim.
	// Valid options are Retain (default for manually created PersistentVolumes), Delete (default
	// for dynamically provisioned PersistentVolumes), and Recycle (deprecated).
	// Recycle must be supported by the volume plugin underlying this PersistentVolume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
	// +optional
	ReclaimPolicy StorageClass_ReclaimPolicy `protobuf:"varint,4,opt,name=reclaim_policy,json=reclaimPolicy,proto3,enum=kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass_ReclaimPolicy" json:"reclaim_policy,omitempty"`
	// storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value
	// means that this volume does not belong to any StorageClass.
	// +optional
	StorageClassName string `protobuf:"bytes,5,opt,name=storage_class_name,json=storageClassName,proto3" json:"storage_class_name,omitempty"`
	// VolumeBindingMode indicates how PersistentVolumeClaims should be
	// provisioned and bound.  When unset, VolumeBindingImmediate is used.
	// This field is only honored by servers that enable the VolumeScheduling feature.
	// +optional
	VolumeBindingMode StorageClass_VolumeBindingMode `protobuf:"varint,6,opt,name=volume_binding_mode,json=volumeBindingMode,proto3,enum=kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass_VolumeBindingMode" json:"volume_binding_mode,omitempty"`
	// Dynamically provisioned PersistentVolumes of this storage class are
	// created with these mountOptions, e.g. ["ro", "soft"]. Not validated -
	// mount of the PVs will simply fail if one is invalid.
	// +optional
	MountOptions []string `protobuf:"bytes,7,rep,name=mount_options,json=mountOptions,proto3" json:"mount_options,omitempty"`
	// Parameters holds the parameters for the provisioner that should
	// create volumes of this storage class.
	// +optional
	Parameters map[string]string `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// AllowVolumeExpansion shows whether the storage class allow volume expand
	// +optional
	AllowVolumeExpansion bool `protobuf:"varint,9,opt,name=allowVolumeExpansion,proto3" json:"allowVolumeExpansion,omitempty"`
}

func (x *StorageClass) Reset() {
	*x = StorageClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storageclass_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClass) ProtoMessage() {}

func (x *StorageClass) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storageclass_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClass.ProtoReflect.Descriptor instead.
func (*StorageClass) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storageclass_proto_rawDescGZIP(), []int{0}
}

func (x *StorageClass) GetMetadata() *types.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StorageClass) GetProvisioner() string {
	if x != nil {
		return x.Provisioner
	}
	return ""
}

func (x *StorageClass) GetReclaimPolicy() StorageClass_ReclaimPolicy {
	if x != nil {
		return x.ReclaimPolicy
	}
	return StorageClass_RECLAIM_AOLICY_UNSPECIFIED
}

func (x *StorageClass) GetStorageClassName() string {
	if x != nil {
		return x.StorageClassName
	}
	return ""
}

func (x *StorageClass) GetVolumeBindingMode() StorageClass_VolumeBindingMode {
	if x != nil {
		return x.VolumeBindingMode
	}
	return StorageClass_VOLUME_BINDING_MODE_UNSPECIFIED
}

func (x *StorageClass) GetMountOptions() []string {
	if x != nil {
		return x.MountOptions
	}
	return nil
}

func (x *StorageClass) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *StorageClass) GetAllowVolumeExpansion() bool {
	if x != nil {
		return x.AllowVolumeExpansion
	}
	return false
}

// ListStorageClassRequest represents the request of list storage class
type ListStorageClassesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster represents the name of PVC to belongs to.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Page requested.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size per page requested.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Name is used for filter.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,5,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
	// LabelSelector is the format after labels.FormatLabels used to filter
	LabelSelector string `protobuf:"bytes,6,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	// FieldSelector is the format after labels.FormatLabels used to filter
	FieldSelector string `protobuf:"bytes,7,opt,name=field_selector,json=fieldSelector,proto3" json:"field_selector,omitempty"`
	// Provisioner is used for fuzzy search by provisioner.
	Provisioner string `protobuf:"bytes,8,opt,name=provisioner,proto3" json:"provisioner,omitempty"`
	// ReclaimPolicy is used for fuzzy search by reclaimPolicy.
	ReclaimPolicy string `protobuf:"bytes,9,opt,name=reclaim_policy,json=reclaimPolicy,proto3" json:"reclaim_policy,omitempty"`
	// FuzzyName is used to fuzzy search by multiple parameters including name.
	FuzzyName string `protobuf:"bytes,10,opt,name=fuzzy_name,json=fuzzyName,proto3" json:"fuzzy_name,omitempty"`
}

func (x *ListStorageClassesRequest) Reset() {
	*x = ListStorageClassesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storageclass_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageClassesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageClassesRequest) ProtoMessage() {}

func (x *ListStorageClassesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storageclass_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageClassesRequest.ProtoReflect.Descriptor instead.
func (*ListStorageClassesRequest) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storageclass_proto_rawDescGZIP(), []int{1}
}

func (x *ListStorageClassesRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListStorageClassesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStorageClassesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStorageClassesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListStorageClassesRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

func (x *ListStorageClassesRequest) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

func (x *ListStorageClassesRequest) GetFieldSelector() string {
	if x != nil {
		return x.FieldSelector
	}
	return ""
}

func (x *ListStorageClassesRequest) GetProvisioner() string {
	if x != nil {
		return x.Provisioner
	}
	return ""
}

func (x *ListStorageClassesRequest) GetReclaimPolicy() string {
	if x != nil {
		return x.ReclaimPolicy
	}
	return ""
}

func (x *ListStorageClassesRequest) GetFuzzyName() string {
	if x != nil {
		return x.FuzzyName
	}
	return ""
}

// ListPersistentVolumeClaimsRequest represents the response of list storage class
type ListStorageClassesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data describes the common attributes of storage devices
	// and allows a Source for provider-specific attributes
	Items []*StorageClass `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination returned contains current page, size, and total.
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListStorageClassesResponse) Reset() {
	*x = ListStorageClassesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storageclass_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageClassesResponse) ProtoMessage() {}

func (x *ListStorageClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storageclass_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageClassesResponse.ProtoReflect.Descriptor instead.
func (*ListStorageClassesResponse) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storageclass_proto_rawDescGZIP(), []int{2}
}

func (x *ListStorageClassesResponse) GetItems() []*StorageClass {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListStorageClassesResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_api_storage_v1alpha1_storageclass_proto protoreflect.FileDescriptor

var file_api_storage_v1alpha1_storageclass_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x6b, 0x61, 0x6e, 0x74, 0x61,
	0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x06, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e,
	0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e,
	0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6b, 0x61,
	0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61,
	0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x7a, 0x0a, 0x13, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e,
	0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x68, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75,
	0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47,
	0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x41, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x65, 0x74, 0x61, 0x69, 0x6e, 0x10, 0x02, 0x22, 0x61, 0x0a, 0x11, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x1f,
	0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x10, 0x02, 0x22, 0xfe, 0x02, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b,
	0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6b, 0x61, 0x6e, 0x74,
	0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2d, 0x61, 0x69,
	0x2f, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x3b, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_storage_v1alpha1_storageclass_proto_rawDescOnce sync.Once
	file_api_storage_v1alpha1_storageclass_proto_rawDescData = file_api_storage_v1alpha1_storageclass_proto_rawDesc
)

func file_api_storage_v1alpha1_storageclass_proto_rawDescGZIP() []byte {
	file_api_storage_v1alpha1_storageclass_proto_rawDescOnce.Do(func() {
		file_api_storage_v1alpha1_storageclass_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_storage_v1alpha1_storageclass_proto_rawDescData)
	})
	return file_api_storage_v1alpha1_storageclass_proto_rawDescData
}

var file_api_storage_v1alpha1_storageclass_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_storage_v1alpha1_storageclass_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_storage_v1alpha1_storageclass_proto_goTypes = []interface{}{
	(StorageClass_ReclaimPolicy)(0),     // 0: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.ReclaimPolicy
	(StorageClass_VolumeBindingMode)(0), // 1: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.VolumeBindingMode
	(*StorageClass)(nil),                // 2: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass
	(*ListStorageClassesRequest)(nil),   // 3: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStorageClassesRequest
	(*ListStorageClassesResponse)(nil),  // 4: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStorageClassesResponse
	nil,                                 // 5: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.ParametersEntry
	(*types.ObjectMeta)(nil),            // 6: kantaloupe.dynamia.ai.api.types.ObjectMeta
	(*types.SortOption)(nil),            // 7: kantaloupe.dynamia.ai.api.types.SortOption
	(*types.Pagination)(nil),            // 8: kantaloupe.dynamia.ai.api.types.Pagination
}
var file_api_storage_v1alpha1_storageclass_proto_depIdxs = []int32{
	6, // 0: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.metadata:type_name -> kantaloupe.dynamia.ai.api.types.ObjectMeta
	0, // 1: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.reclaim_policy:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.ReclaimPolicy
	1, // 2: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.volume_binding_mode:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.VolumeBindingMode
	5, // 3: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.parameters:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass.ParametersEntry
	7, // 4: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStorageClassesRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	2, // 5: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStorageClassesResponse.items:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageClass
	8, // 6: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStorageClassesResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_api_storage_v1alpha1_storageclass_proto_init() }
func file_api_storage_v1alpha1_storageclass_proto_init() {
	if File_api_storage_v1alpha1_storageclass_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_storage_v1alpha1_storageclass_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_storage_v1alpha1_storageclass_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorageClassesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_storage_v1alpha1_storageclass_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStorageClassesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_storage_v1alpha1_storageclass_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_storage_v1alpha1_storageclass_proto_goTypes,
		DependencyIndexes: file_api_storage_v1alpha1_storageclass_proto_depIdxs,
		EnumInfos:         file_api_storage_v1alpha1_storageclass_proto_enumTypes,
		MessageInfos:      file_api_storage_v1alpha1_storageclass_proto_msgTypes,
	}.Build()
	File_api_storage_v1alpha1_storageclass_proto = out.File
	file_api_storage_v1alpha1_storageclass_proto_rawDesc = nil
	file_api_storage_v1alpha1_storageclass_proto_goTypes = nil
	file_api_storage_v1alpha1_storageclass_proto_depIdxs = nil
}
