// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/storage/v1alpha1/storage.proto

package v1alpha1

import (
	v1alpha1 "github.com/dynamia-ai/kantaloupe/api/core/v1alpha1"
	types "github.com/dynamia-ai/kantaloupe/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageType int32

const (
	StorageType_StorageTypeUnspecified StorageType = 0
	StorageType_LocalPV                StorageType = 1
	StorageType_NFS                    StorageType = 2
	StorageType_PVC                    StorageType = 3
)

// Enum value maps for StorageType.
var (
	StorageType_name = map[int32]string{
		0: "StorageTypeUnspecified",
		1: "LocalPV",
		2: "NFS",
		3: "PVC",
	}
	StorageType_value = map[string]int32{
		"StorageTypeUnspecified": 0,
		"LocalPV":                1,
		"NFS":                    2,
		"PVC":                    3,
	}
)

func (x StorageType) Enum() *StorageType {
	p := new(StorageType)
	*p = x
	return p
}

func (x StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_storage_v1alpha1_storage_proto_enumTypes[0].Descriptor()
}

func (StorageType) Type() protoreflect.EnumType {
	return &file_api_storage_v1alpha1_storage_proto_enumTypes[0]
}

func (x StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageType.Descriptor instead.
func (StorageType) EnumDescriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storage_proto_rawDescGZIP(), []int{0}
}

type CreateStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster     string      `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	StorageType StorageType `protobuf:"varint,2,opt,name=storage_type,json=storageType,proto3,enum=kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType" json:"storage_type,omitempty"`
	IsManage    bool        `protobuf:"varint,3,opt,name=is_manage,json=isManage,proto3" json:"is_manage,omitempty"`
	// common attributes
	StorageName string `protobuf:"bytes,4,opt,name=storage_name,json=storageName,proto3" json:"storage_name,omitempty"`
	Namespace   string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	AccessMode  string `protobuf:"bytes,6,opt,name=access_mode,json=accessMode,proto3" json:"access_mode,omitempty"`
	StorageSize string `protobuf:"bytes,7,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	// NFS
	NfsServer string `protobuf:"bytes,8,opt,name=nfs_server,json=nfsServer,proto3" json:"nfs_server,omitempty"`
	DataPath  string `protobuf:"bytes,9,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	// LocalPV
	LocalPath string `protobuf:"bytes,10,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
	NodeName  string `protobuf:"bytes,11,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// PVC
	StorageClassName string `protobuf:"bytes,12,opt,name=storage_class_name,json=storageClassName,proto3" json:"storage_class_name,omitempty"`
}

func (x *CreateStorageRequest) Reset() {
	*x = CreateStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageRequest) ProtoMessage() {}

func (x *CreateStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageRequest) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storage_proto_rawDescGZIP(), []int{0}
}

func (x *CreateStorageRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *CreateStorageRequest) GetStorageType() StorageType {
	if x != nil {
		return x.StorageType
	}
	return StorageType_StorageTypeUnspecified
}

func (x *CreateStorageRequest) GetIsManage() bool {
	if x != nil {
		return x.IsManage
	}
	return false
}

func (x *CreateStorageRequest) GetStorageName() string {
	if x != nil {
		return x.StorageName
	}
	return ""
}

func (x *CreateStorageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateStorageRequest) GetAccessMode() string {
	if x != nil {
		return x.AccessMode
	}
	return ""
}

func (x *CreateStorageRequest) GetStorageSize() string {
	if x != nil {
		return x.StorageSize
	}
	return ""
}

func (x *CreateStorageRequest) GetNfsServer() string {
	if x != nil {
		return x.NfsServer
	}
	return ""
}

func (x *CreateStorageRequest) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *CreateStorageRequest) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *CreateStorageRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *CreateStorageRequest) GetStorageClassName() string {
	if x != nil {
		return x.StorageClassName
	}
	return ""
}

type Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Spec defines a specification of a persistent volume owned by the cluster.
	PersistentVolumeClaim *v1alpha1.PersistentVolumeClaim `protobuf:"bytes,1,opt,name=persistent_volume_claim,json=persistentVolumeClaim,proto3" json:"persistent_volume_claim,omitempty"`
	StorageType           StorageType                     `protobuf:"varint,2,opt,name=storage_type,json=storageType,proto3,enum=kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType" json:"storage_type,omitempty"`
	PersistentVolume      *v1alpha1.PersistentVolume      `protobuf:"bytes,3,opt,name=persistent_volume,json=persistentVolume,proto3" json:"persistent_volume,omitempty"`
}

func (x *Storage) Reset() {
	*x = Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storage_proto_rawDescGZIP(), []int{1}
}

func (x *Storage) GetPersistentVolumeClaim() *v1alpha1.PersistentVolumeClaim {
	if x != nil {
		return x.PersistentVolumeClaim
	}
	return nil
}

func (x *Storage) GetStorageType() StorageType {
	if x != nil {
		return x.StorageType
	}
	return StorageType_StorageTypeUnspecified
}

func (x *Storage) GetPersistentVolume() *v1alpha1.PersistentVolume {
	if x != nil {
		return x.PersistentVolume
	}
	return nil
}

type DeleteStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DeleteStorageRequest) Reset() {
	*x = DeleteStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageRequest) ProtoMessage() {}

func (x *DeleteStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageRequest) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storage_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteStorageRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *DeleteStorageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteStorageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListStoragesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster represents the name of PVC to belongs to.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Namespace represents which namespace the PVC belongs to.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Page requested.
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// Size per page requested.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Name is used for fuzzy search by name.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Phases is used for fuzzy search by phase.
	Phase v1alpha1.PVCPhase `protobuf:"varint,6,opt,name=phase,proto3,enum=kantaloupe.dynamia.ai.api.core.v1alpha1.PVCPhase" json:"phase,omitempty"`
	// sort_option determines the cluster list order reference.
	SortOption *types.SortOption `protobuf:"bytes,7,opt,name=sort_option,json=sortOption,proto3" json:"sort_option,omitempty"`
	// LabelSelector is the format after labels.FormatLabels used to filter
	LabelSelector string `protobuf:"bytes,8,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	// FieldSelector is the format after labels.FormatLabels used to filter
	FieldSelector string `protobuf:"bytes,9,opt,name=field_selector,json=fieldSelector,proto3" json:"field_selector,omitempty"`
	// FuzzyName is used to fuzzy search by multiple parameters including name.
	FuzzyName   string      `protobuf:"bytes,10,opt,name=fuzzy_name,json=fuzzyName,proto3" json:"fuzzy_name,omitempty"`
	IsManage    bool        `protobuf:"varint,11,opt,name=is_manage,json=isManage,proto3" json:"is_manage,omitempty"`
	StorageType StorageType `protobuf:"varint,12,opt,name=storage_type,json=storageType,proto3,enum=kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType" json:"storage_type,omitempty"`
}

func (x *ListStoragesRequest) Reset() {
	*x = ListStoragesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoragesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoragesRequest) ProtoMessage() {}

func (x *ListStoragesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoragesRequest.ProtoReflect.Descriptor instead.
func (*ListStoragesRequest) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storage_proto_rawDescGZIP(), []int{3}
}

func (x *ListStoragesRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *ListStoragesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListStoragesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStoragesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStoragesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListStoragesRequest) GetPhase() v1alpha1.PVCPhase {
	if x != nil {
		return x.Phase
	}
	return v1alpha1.PVCPhase(0)
}

func (x *ListStoragesRequest) GetSortOption() *types.SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

func (x *ListStoragesRequest) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

func (x *ListStoragesRequest) GetFieldSelector() string {
	if x != nil {
		return x.FieldSelector
	}
	return ""
}

func (x *ListStoragesRequest) GetFuzzyName() string {
	if x != nil {
		return x.FuzzyName
	}
	return ""
}

func (x *ListStoragesRequest) GetIsManage() bool {
	if x != nil {
		return x.IsManage
	}
	return false
}

func (x *ListStoragesRequest) GetStorageType() StorageType {
	if x != nil {
		return x.StorageType
	}
	return StorageType_StorageTypeUnspecified
}

// ListPersistentVolumeClaimRequest represents the response of list PVC
type ListStoragesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data describes the common attributes of storage devices
	// and allows a Source for provider-specific attributes
	Items []*v1alpha1.PersistentVolumeClaim `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Pagination returned contains current page, size, and total.
	Pagination *types.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListStoragesResponse) Reset() {
	*x = ListStoragesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoragesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoragesResponse) ProtoMessage() {}

func (x *ListStoragesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_storage_v1alpha1_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoragesResponse.ProtoReflect.Descriptor instead.
func (*ListStoragesResponse) Descriptor() ([]byte, []int) {
	return file_api_storage_v1alpha1_storage_proto_rawDescGZIP(), []int{4}
}

func (x *ListStoragesResponse) GetItems() []*v1alpha1.PersistentVolumeClaim {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListStoragesResponse) GetPagination() *types.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_api_storage_v1alpha1_storage_proto protoreflect.FileDescriptor

var file_api_storage_v1alpha1_storage_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x1a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd4, 0x03, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61,
	0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x66, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x66, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x76, 0x0a, 0x17, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x15, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x5a, 0x0a, 0x0c, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x37, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x10, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x62,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x8f, 0x04, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f,
	0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x56, 0x43, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75,
	0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b,
	0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x61, 0x2e, 0x61, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c,
	0x6f, 0x75, 0x70, 0x65, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61, 0x2e, 0x61, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2a, 0x48, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x56, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x46, 0x53, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x56, 0x43, 0x10, 0x03, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x61,
	0x2d, 0x61, 0x69, 0x2f, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x6c, 0x6f, 0x75, 0x70, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x3b, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_storage_v1alpha1_storage_proto_rawDescOnce sync.Once
	file_api_storage_v1alpha1_storage_proto_rawDescData = file_api_storage_v1alpha1_storage_proto_rawDesc
)

func file_api_storage_v1alpha1_storage_proto_rawDescGZIP() []byte {
	file_api_storage_v1alpha1_storage_proto_rawDescOnce.Do(func() {
		file_api_storage_v1alpha1_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_storage_v1alpha1_storage_proto_rawDescData)
	})
	return file_api_storage_v1alpha1_storage_proto_rawDescData
}

var file_api_storage_v1alpha1_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_storage_v1alpha1_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_storage_v1alpha1_storage_proto_goTypes = []interface{}{
	(StorageType)(0),                       // 0: kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType
	(*CreateStorageRequest)(nil),           // 1: kantaloupe.dynamia.ai.api.storage.v1alpha1.CreateStorageRequest
	(*Storage)(nil),                        // 2: kantaloupe.dynamia.ai.api.storage.v1alpha1.Storage
	(*DeleteStorageRequest)(nil),           // 3: kantaloupe.dynamia.ai.api.storage.v1alpha1.DeleteStorageRequest
	(*ListStoragesRequest)(nil),            // 4: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesRequest
	(*ListStoragesResponse)(nil),           // 5: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesResponse
	(*v1alpha1.PersistentVolumeClaim)(nil), // 6: kantaloupe.dynamia.ai.api.core.v1alpha1.PersistentVolumeClaim
	(*v1alpha1.PersistentVolume)(nil),      // 7: kantaloupe.dynamia.ai.api.core.v1alpha1.PersistentVolume
	(v1alpha1.PVCPhase)(0),                 // 8: kantaloupe.dynamia.ai.api.core.v1alpha1.PVCPhase
	(*types.SortOption)(nil),               // 9: kantaloupe.dynamia.ai.api.types.SortOption
	(*types.Pagination)(nil),               // 10: kantaloupe.dynamia.ai.api.types.Pagination
}
var file_api_storage_v1alpha1_storage_proto_depIdxs = []int32{
	0,  // 0: kantaloupe.dynamia.ai.api.storage.v1alpha1.CreateStorageRequest.storage_type:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType
	6,  // 1: kantaloupe.dynamia.ai.api.storage.v1alpha1.Storage.persistent_volume_claim:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.PersistentVolumeClaim
	0,  // 2: kantaloupe.dynamia.ai.api.storage.v1alpha1.Storage.storage_type:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType
	7,  // 3: kantaloupe.dynamia.ai.api.storage.v1alpha1.Storage.persistent_volume:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.PersistentVolume
	8,  // 4: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesRequest.phase:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.PVCPhase
	9,  // 5: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesRequest.sort_option:type_name -> kantaloupe.dynamia.ai.api.types.SortOption
	0,  // 6: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesRequest.storage_type:type_name -> kantaloupe.dynamia.ai.api.storage.v1alpha1.StorageType
	6,  // 7: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesResponse.items:type_name -> kantaloupe.dynamia.ai.api.core.v1alpha1.PersistentVolumeClaim
	10, // 8: kantaloupe.dynamia.ai.api.storage.v1alpha1.ListStoragesResponse.pagination:type_name -> kantaloupe.dynamia.ai.api.types.Pagination
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_storage_v1alpha1_storage_proto_init() }
func file_api_storage_v1alpha1_storage_proto_init() {
	if File_api_storage_v1alpha1_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_storage_v1alpha1_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_storage_v1alpha1_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_storage_v1alpha1_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_storage_v1alpha1_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoragesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_storage_v1alpha1_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoragesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_storage_v1alpha1_storage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_storage_v1alpha1_storage_proto_goTypes,
		DependencyIndexes: file_api_storage_v1alpha1_storage_proto_depIdxs,
		EnumInfos:         file_api_storage_v1alpha1_storage_proto_enumTypes,
		MessageInfos:      file_api_storage_v1alpha1_storage_proto_msgTypes,
	}.Build()
	File_api_storage_v1alpha1_storage_proto = out.File
	file_api_storage_v1alpha1_storage_proto_rawDesc = nil
	file_api_storage_v1alpha1_storage_proto_goTypes = nil
	file_api_storage_v1alpha1_storage_proto_depIdxs = nil
}
